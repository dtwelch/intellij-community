/* The following code was generated by JFlex 1.7.0 tweaked for IntelliJ platform */

package com.jetbrains.resolve.lexer;

import com.intellij.lexer.FlexLexer;
import com.intellij.psi.tree.IElementType;
import com.jetbrains.resolve.ResTypes;
import java.util.*;
import static com.intellij.psi.TokenType.BAD_CHARACTER;
import static com.jetbrains.resolve.ResolveParserDefinition.*;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>ResLexer.flex</tt>
 */
class _ResLexer implements FlexLexer, ResTypes {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   * Chosen bits are [11, 6, 4]
   * Total runtime size is 14528 bytes
   */
  public static int ZZ_CMAP(int ch) {
    return ZZ_CMAP_A[(ZZ_CMAP_Y[(ZZ_CMAP_Z[ch>>10]<<6)|((ch>>4)&0x3f)]<<4)|(ch&0xf)];
  }

  /* The ZZ_CMAP_Z table has 1088 entries */
  static final char ZZ_CMAP_Z[] = zzUnpackCMap(
    "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\6\15\1\16\23\15"+
    "\1\17\1\15\1\20\1\21\12\15\1\22\10\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1"+
    "\33\1\34\1\35\1\36\1\37\2\23\1\15\1\40\14\23\1\41\1\42\20\23\1\43\10\23\1"+
    "\44\4\23\1\45\1\46\4\23\51\15\1\47\3\15\1\50\1\51\17\23\1\52\u0381\23");

  /* The ZZ_CMAP_Y table has 2752 entries */
  static final char ZZ_CMAP_Y[] = zzUnpackCMap(
    "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\1\1\11\1\12\1\13\1\14\1\13\1\15\34"+
    "\13\1\16\1\17\1\20\10\1\1\21\1\22\1\23\1\24\1\25\1\26\2\13\1\27\10\13\1\30"+
    "\11\13\1\31\1\32\1\13\1\33\1\32\1\13\1\34\4\1\1\13\1\35\1\36\1\37\1\1\2\13"+
    "\1\35\1\1\1\40\1\32\5\13\1\41\1\42\1\43\1\1\1\44\1\13\1\1\1\45\5\13\1\46\1"+
    "\47\1\50\1\13\1\35\1\51\1\13\1\52\1\53\1\1\1\13\1\54\4\1\1\55\5\1\1\56\2\13"+
    "\1\57\1\1\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\61\1\71\1\72\1\64"+
    "\1\65\1\73\1\1\1\74\1\75\1\76\1\77\1\100\1\65\1\101\1\1\1\102\1\61\1\47\1"+
    "\63\1\64\1\65\1\101\1\1\1\70\1\61\1\47\1\103\1\104\1\105\1\106\1\1\1\102\1"+
    "\75\1\107\1\110\1\44\1\65\1\111\1\1\1\112\1\61\1\1\1\110\1\44\1\65\1\111\1"+
    "\1\1\67\1\61\1\113\1\110\1\44\1\13\1\114\1\67\1\1\1\61\1\115\1\116\1\117\1"+
    "\13\1\120\1\121\1\1\1\75\1\1\1\32\2\13\1\122\1\121\1\123\2\1\1\124\1\125\1"+
    "\126\1\127\1\130\1\131\2\1\1\102\1\1\1\123\1\1\1\132\1\13\1\133\1\1\1\134"+
    "\7\1\2\13\1\35\1\135\1\123\1\136\1\137\1\140\1\141\1\123\2\13\1\142\2\13\1"+
    "\143\24\13\1\144\1\145\2\13\1\144\2\13\1\146\1\147\1\15\3\13\1\147\3\13\1"+
    "\35\2\1\1\13\1\1\5\13\1\150\1\32\45\13\1\151\1\13\1\32\1\35\4\13\1\152\1\102"+
    "\1\153\1\17\1\13\1\17\1\13\1\17\1\153\1\102\3\13\1\154\1\1\1\155\1\123\2\1"+
    "\1\123\5\13\1\31\2\13\1\156\4\13\1\46\1\13\1\133\2\1\1\75\1\13\1\157\1\150"+
    "\2\13\1\160\1\1\1\161\1\123\2\1\1\13\1\121\3\13\1\150\2\1\2\123\1\162\5\1"+
    "\1\116\2\13\1\154\1\163\1\123\2\1\1\164\1\13\1\165\1\50\2\13\1\46\1\1\2\13"+
    "\1\154\1\1\1\166\1\50\1\13\1\157\6\1\1\167\1\170\14\13\4\1\21\13\1\171\2\13"+
    "\1\171\1\172\1\13\1\157\3\13\1\173\1\174\1\175\1\133\1\174\2\1\1\176\1\135"+
    "\1\102\1\177\1\1\1\200\1\1\1\133\1\13\1\35\4\1\1\201\1\202\1\203\1\204\1\205"+
    "\1\1\2\13\1\54\1\206\1\207\1\210\1\211\1\206\2\1\1\212\1\213\1\214\1\215\1"+
    "\216\1\217\1\220\1\221\1\222\1\223\1\1\1\224\1\225\3\1\1\226\115\1\1\227\1"+
    "\230\40\1\1\231\37\1\2\13\1\232\2\13\1\232\10\13\1\233\1\234\2\13\1\142\3"+
    "\13\1\34\1\1\1\13\1\121\4\235\4\1\1\135\35\1\1\236\1\1\1\237\1\240\1\32\4"+
    "\13\1\241\1\32\4\13\1\143\1\116\1\13\1\157\1\32\4\13\1\232\1\1\1\13\1\35\3"+
    "\1\1\13\40\1\133\13\1\46\4\1\134\13\1\133\3\1\10\13\1\133\4\1\2\13\1\157\20"+
    "\13\1\133\1\13\1\242\1\1\2\13\1\232\1\135\1\13\1\31\5\13\2\1\1\243\1\244\5"+
    "\13\1\245\1\154\1\35\4\1\1\246\1\247\1\13\1\36\1\250\3\13\1\154\1\244\2\13"+
    "\1\154\1\1\1\123\1\1\1\251\1\50\1\13\1\46\1\13\1\121\1\1\1\13\1\133\1\56\2"+
    "\13\1\36\1\135\1\123\1\1\1\123\2\13\1\54\1\1\1\252\1\123\1\13\1\253\3\13\1"+
    "\254\1\255\1\256\1\35\1\76\1\257\1\260\1\235\11\1\2\13\1\36\1\123\72\13\1"+
    "\154\1\13\1\261\2\13\1\160\120\1\26\13\1\157\6\13\1\106\2\1\1\121\1\262\1"+
    "\65\1\263\1\264\6\13\1\17\1\1\1\164\25\13\1\157\1\1\4\13\1\244\2\13\1\31\2"+
    "\1\1\133\3\1\1\265\1\45\1\1\1\107\1\266\7\13\1\133\1\177\1\123\1\32\1\267"+
    "\1\32\1\35\1\270\4\13\1\232\1\271\1\272\1\170\1\1\1\273\1\13\1\15\1\274\2"+
    "\157\2\1\7\13\1\35\4\1\3\13\1\150\20\1\1\13\1\133\3\13\1\102\2\1\1\13\1\232"+
    "\1\1\1\13\1\35\3\1\1\13\1\157\2\13\1\275\1\276\2\1\11\13\1\157\1\123\65\1"+
    "\1\277\2\13\1\300\1\13\1\46\12\1\1\13\1\46\1\13\1\106\4\1\3\13\1\301\4\1\1"+
    "\102\1\302\1\13\1\154\2\1\1\13\1\133\10\1\3\13\1\46\1\13\1\46\1\13\1\36\10"+
    "\1\4\13\1\54\73\1\1\164\2\13\1\31\2\1\1\75\1\1\1\164\2\13\2\1\1\13\1\54\1"+
    "\123\1\164\1\13\1\121\1\75\4\1\1\164\2\13\1\36\1\303\1\123\21\1\1\123\25\1"+
    "\1\123\7\1\1\123\27\1\1\123\2\1\2\13\1\35\1\1\1\123\6\1\1\123\32\1\1\123\66"+
    "\1\1\123\72\1\66\13\1\232\11\1\6\13\1\36\71\1\2\13\1\232\75\1\43\13\1\54\2"+
    "\1\1\123\16\1\1\123\72\1\4\13\1\150\1\102\3\1\1\164\6\1\1\17\77\1\5\13\1\266"+
    "\3\13\1\153\1\304\1\305\1\306\3\13\1\307\1\310\1\13\1\311\1\312\1\44\24\13"+
    "\1\313\1\13\1\44\1\143\1\13\1\143\1\13\1\266\1\13\1\266\1\232\1\13\1\232\1"+
    "\13\1\65\1\13\1\65\1\13\1\314\3\315\25\1\1\123\112\1\1\306\1\13\1\316\1\317"+
    "\1\320\1\321\1\322\1\323\1\324\1\160\1\325\1\160\24\1\55\13\1\121\2\1\103"+
    "\13\1\150\15\13\1\157\76\1\41\13\1\157\36\1");

  /* The ZZ_CMAP_A table has 3424 entries */
  static final char ZZ_CMAP_A[] = zzUnpackCMap(
    "\11\0\1\3\1\2\1\1\1\4\1\2\22\0\1\3\1\14\1\21\1\26\1\7\2\0\1\16\1\30\1\31\1"+
    "\6\1\14\1\34\1\14\1\27\1\5\1\13\10\24\1\12\1\32\1\33\1\14\1\70\1\14\2\0\2"+
    "\7\1\76\1\103\1\104\1\107\1\110\1\7\1\111\2\7\1\113\2\7\1\115\1\77\1\7\1\114"+
    "\1\7\1\117\1\23\1\120\1\121\3\7\1\43\1\22\1\44\1\0\1\10\1\15\1\53\1\74\1\100"+
    "\1\65\1\56\1\60\1\55\1\101\1\35\2\7\1\52\1\105\1\54\1\61\1\102\1\66\1\57\1"+
    "\63\1\64\1\106\1\25\1\116\1\62\1\75\1\112\1\46\1\45\1\47\1\14\6\0\1\1\14\0"+
    "\4\7\4\0\1\7\1\0\1\17\10\0\1\7\4\0\1\7\5\0\27\7\1\17\17\7\1\0\12\7\4\0\14"+
    "\7\16\0\5\7\7\0\1\7\1\0\1\7\1\0\5\7\1\0\2\7\2\0\4\7\10\0\1\7\1\0\3\7\1\0\1"+
    "\7\1\0\5\7\2\20\3\7\1\20\2\7\1\20\2\7\1\20\3\7\1\0\1\20\2\7\1\20\1\7\2\20"+
    "\7\7\31\20\14\7\1\0\13\7\10\0\16\7\11\0\26\7\2\0\1\7\6\0\10\7\7\0\14\7\5\0"+
    "\3\7\30\0\1\7\4\0\12\11\4\0\6\7\1\0\1\7\17\0\2\7\7\0\2\7\12\11\3\7\2\0\2\7"+
    "\1\0\16\7\15\0\11\7\13\0\1\7\16\0\12\11\6\7\4\0\2\7\4\0\1\7\5\0\6\7\4\0\1"+
    "\7\11\0\1\7\3\0\1\7\7\0\11\7\7\0\1\7\1\0\13\7\7\0\26\7\3\0\1\7\2\0\1\7\7\0"+
    "\12\7\4\0\12\11\1\0\7\7\1\0\7\7\5\0\10\7\2\0\2\7\2\0\26\7\1\0\7\7\1\0\1\7"+
    "\3\0\4\7\3\0\1\7\20\0\1\7\15\0\2\7\1\0\5\7\7\0\1\7\11\0\6\7\4\0\2\7\1\0\2"+
    "\7\1\0\2\7\1\0\2\7\17\0\4\7\1\0\1\7\7\0\12\11\2\0\3\7\20\0\11\7\1\0\3\7\1"+
    "\0\16\7\1\0\2\7\1\0\5\7\3\0\1\7\2\0\1\7\22\0\1\7\1\0\6\7\3\0\3\7\1\0\4\7\3"+
    "\0\2\7\1\0\1\7\1\0\2\7\3\0\2\7\3\0\3\7\3\0\14\7\17\0\1\7\13\0\10\7\1\0\6\7"+
    "\1\0\5\7\3\0\1\7\12\0\2\7\7\0\2\7\15\0\13\7\2\0\1\7\14\0\6\7\5\0\22\7\3\0"+
    "\10\7\1\0\11\7\1\0\1\7\2\0\7\7\11\0\1\7\1\0\2\7\13\0\1\7\12\11\7\0\2\7\1\0"+
    "\1\7\2\0\2\7\1\0\1\7\2\0\1\7\6\0\4\7\1\0\7\7\1\0\3\7\1\0\1\7\1\0\1\7\2\0\2"+
    "\7\1\0\4\7\1\0\2\7\11\0\1\7\2\0\5\7\1\0\1\7\11\0\12\11\2\0\14\7\1\0\24\7\13"+
    "\0\5\7\22\0\7\7\4\0\4\7\3\0\1\7\3\0\2\7\7\0\3\7\4\0\15\7\14\0\1\7\1\0\6\7"+
    "\1\0\1\7\5\0\1\7\2\0\13\7\1\0\15\7\1\0\4\7\2\0\7\7\1\0\1\7\1\0\4\7\2\0\1\7"+
    "\1\0\4\7\2\0\7\7\1\0\1\7\1\0\4\7\2\0\15\7\13\0\15\7\2\0\14\7\3\0\17\7\1\0"+
    "\6\7\23\0\1\7\3\0\2\7\3\0\11\7\1\0\1\7\5\0\16\7\2\0\14\7\5\0\7\7\17\0\1\7"+
    "\15\0\7\7\7\0\16\7\15\0\2\7\12\11\3\0\3\7\11\0\4\7\1\0\4\7\3\0\2\7\11\0\6"+
    "\7\2\0\6\7\2\0\10\7\1\0\1\7\1\0\1\7\1\0\1\7\1\0\6\7\1\0\7\7\1\0\1\7\3\0\3"+
    "\7\1\0\7\7\3\0\4\7\2\0\6\7\14\0\2\1\12\0\1\7\14\0\1\7\15\0\1\7\2\0\1\20\4"+
    "\0\1\7\2\0\12\7\1\0\1\20\2\0\1\17\1\7\1\20\2\7\1\20\6\0\1\20\1\0\1\7\1\0\1"+
    "\7\1\0\4\7\1\0\13\7\2\0\4\7\5\0\5\7\4\0\1\7\2\0\1\17\1\0\1\17\1\0\1\17\23"+
    "\0\2\17\21\0\10\17\14\0\1\51\2\0\1\50\1\0\1\17\2\0\2\17\5\0\1\17\1\0\1\17"+
    "\6\0\2\17\3\0\1\17\7\0\1\36\1\0\1\72\1\73\2\17\15\0\1\17\3\0\1\17\6\0\1\17"+
    "\4\0\1\17\7\0\1\17\13\0\1\67\3\0\1\71\1\17\2\0\2\17\4\0\2\17\6\0\2\17\10\0"+
    "\2\17\4\0\2\17\2\0\2\17\6\0\1\17\6\0\3\17\1\0\1\17\10\0\4\17\12\0\4\17\2\0"+
    "\1\17\1\0\3\17\15\0\1\41\1\42\16\0\1\37\1\40\13\0\6\17\5\0\3\17\1\0\1\17\13"+
    "\0\17\7\1\0\5\7\6\0\4\7\3\0\2\7\14\0\7\7\1\0\7\7\6\0\3\7\11\0\11\7\7\0\5\7"+
    "\2\0\5\7\3\0\7\7\6\0\3\7\12\11\2\7\13\0\11\7\2\0\27\7\2\0\4\7\11\0\12\7\1"+
    "\0\3\7\1\0\4\7\1\0\4\7\10\0\1\7\11\0\6\7\3\0\1\7\4\0\3\7\1\0\10\7\4\0\7\7"+
    "\3\0\1\7\6\0\1\7\3\0\2\7\2\0\5\7\2\0\1\7\1\0\1\7\30\0\3\7\3\0\6\7\2\0\6\7"+
    "\2\0\6\7\11\0\7\7\4\0\5\7\3\0\5\7\5\0\1\7\1\0\10\7\1\0\5\7\1\0\1\7\1\0\2\7"+
    "\1\0\2\7\1\0\12\7\3\0\2\7\13\0\5\7\1\0\25\7\4\0\1\7\6\0\12\7\2\0\6\7\2\0\6"+
    "\7\2\0\6\7\2\0\3\7\3\0\14\7\1\0\16\7\1\0\2\7\1\0\5\7\4\0\10\7\1\0\5\7\12\0"+
    "\6\7\2\0\1\7\1\0\14\7\1\0\2\7\3\0\1\7\2\0\11\7\6\0\6\7\1\0\3\7\1\0\7\7\1\0"+
    "\4\7\15\0\1\7\2\0\2\7\2\0\2\7\1\20\1\7\1\0\14\7\1\0\1\7\1\0\7\7\1\0\21\7\1"+
    "\0\4\7\2\0\10\7\1\0\7\7\1\0\13\7\1\20\1\0\4\7\1\0\5\7\1\0\1\7\3\0\14\7\2\0"+
    "\13\7\1\0\10\7\2\0\22\11\1\0\2\7\1\0\1\7\2\0\1\7\1\0\12\7\1\0\4\7\1\0\1\7"+
    "\1\0\1\7\6\0\1\7\4\0\1\7\1\0\1\7\1\0\1\7\1\0\3\7\1\0\2\7\1\0\1\7\2\0\1\7\1"+
    "\0\1\7\1\0\1\7\1\0\1\7\1\0\1\7\1\0\2\7\1\0\1\7\2\0\4\7\1\0\7\7\1\0\4\7\1\0"+
    "\4\7\1\0\1\7\1\0\12\7\1\0\5\7\1\0\3\7\1\0\5\7\1\0\5\7");

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\2\3\1\1\1\4\1\5\2\6"+
    "\2\1\1\5\1\7\1\1\1\10\1\11\1\12\1\13"+
    "\1\14\1\15\1\16\1\5\1\17\1\20\1\21\1\22"+
    "\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32"+
    "\7\5\1\33\1\34\1\35\1\36\1\37\23\5\1\40"+
    "\1\41\1\0\2\4\3\0\2\42\3\0\1\7\11\4"+
    "\1\0\1\43\1\44\1\5\1\45\1\46\1\47\11\5"+
    "\1\50\5\5\1\51\1\52\20\5\1\53\12\5\1\41"+
    "\6\4\1\37\1\4\2\0\1\54\5\5\1\55\12\5"+
    "\1\56\21\5\1\57\22\5\1\60\1\5\1\41\1\0"+
    "\1\4\1\36\1\35\4\4\1\61\1\0\3\5\1\62"+
    "\12\5\1\63\1\5\1\64\1\65\1\66\22\5\1\67"+
    "\12\5\1\70\1\5\1\71\3\5\5\4\1\72\14\5"+
    "\1\73\42\5\1\74\5\4\1\5\1\75\12\5\1\76"+
    "\7\5\1\77\1\5\1\100\21\5\1\101\4\5\1\102"+
    "\1\103\1\104\1\105\1\106\1\4\2\5\1\107\2\5"+
    "\1\110\11\5\1\111\1\112\12\5\1\113\1\114\1\5"+
    "\1\115\2\5\1\116\5\5\1\117\1\4\2\5\1\120"+
    "\1\121\1\5\1\122\1\123\1\124\1\125\11\5\1\126"+
    "\4\5\1\127\1\5\1\130\5\5\1\4\1\5\1\131"+
    "\1\5\1\132\1\5\1\133\1\5\1\134\1\135\3\5"+
    "\1\136\3\5\1\137\2\5\1\140\1\141\1\5\1\33"+
    "\1\5\1\142\1\143\4\5\1\57\6\5\1\144\1\145"+
    "\1\146\1\5\1\147\1\150\1\151\1\152\6\5\1\153"+
    "\1\154\1\155";

  private static int [] zzUnpackAction() {
    int [] result = new int[509];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\122\0\244\0\122\0\244\0\366\0\u0148\0\u019a"+
    "\0\u01ec\0\122\0\u023e\0\u0290\0\u02e2\0\u0334\0\u0386\0\122"+
    "\0\122\0\u03d8\0\122\0\u042a\0\122\0\122\0\u047c\0\122"+
    "\0\122\0\122\0\122\0\122\0\122\0\122\0\u04ce\0\122"+
    "\0\122\0\122\0\122\0\u0520\0\u0572\0\u05c4\0\u0616\0\u0668"+
    "\0\u06ba\0\u070c\0\122\0\122\0\122\0\122\0\122\0\u075e"+
    "\0\u07b0\0\u0802\0\u0854\0\u08a6\0\u08f8\0\u094a\0\u099c\0\u09ee"+
    "\0\u0a40\0\u0a92\0\u0ae4\0\u0b36\0\u0b88\0\u0bda\0\u0c2c\0\u0c7e"+
    "\0\u0cd0\0\u0d22\0\u0d74\0\u0dc6\0\u0e18\0\u0e6a\0\u0ebc\0\u0f0e"+
    "\0\u0f60\0\u0fb2\0\u1004\0\122\0\u1056\0\u10a8\0\u10fa\0\122"+
    "\0\u114c\0\u119e\0\u11f0\0\u1242\0\u1294\0\u12e6\0\u1338\0\u138a"+
    "\0\u13dc\0\u142e\0\122\0\u1480\0\u14d2\0\u019a\0\u019a\0\122"+
    "\0\u1524\0\u1576\0\u15c8\0\u161a\0\u166c\0\u16be\0\u1710\0\u1762"+
    "\0\u17b4\0\u019a\0\u1806\0\u1858\0\u18aa\0\u18fc\0\u194e\0\u019a"+
    "\0\u019a\0\u19a0\0\u19f2\0\u1a44\0\u1a96\0\u1ae8\0\u1b3a\0\u1b8c"+
    "\0\u1bde\0\u1c30\0\u1c82\0\u1cd4\0\u1d26\0\u1d78\0\u1dca\0\u1e1c"+
    "\0\u1e6e\0\u019a\0\u1ec0\0\u1f12\0\u1f64\0\u1fb6\0\u2008\0\u205a"+
    "\0\u20ac\0\u20fe\0\u2150\0\u21a2\0\u21f4\0\u2246\0\u2298\0\u22ea"+
    "\0\u233c\0\u238e\0\u23e0\0\u114c\0\u2432\0\u2484\0\u24d6\0\122"+
    "\0\u2528\0\u257a\0\u25cc\0\u261e\0\u2670\0\u019a\0\u26c2\0\u2714"+
    "\0\u2766\0\u27b8\0\u280a\0\u285c\0\u28ae\0\u2900\0\u2952\0\u29a4"+
    "\0\u019a\0\u29f6\0\u2a48\0\u2a9a\0\u2aec\0\u2b3e\0\u2b90\0\u2be2"+
    "\0\u2c34\0\u2c86\0\u2cd8\0\u2d2a\0\u2d7c\0\u2dce\0\u2e20\0\u2e72"+
    "\0\u2ec4\0\u2f16\0\u2f68\0\u2fba\0\u300c\0\u305e\0\u30b0\0\u3102"+
    "\0\u3154\0\u31a6\0\u31f8\0\u324a\0\u329c\0\u32ee\0\u3340\0\u3392"+
    "\0\u33e4\0\u3436\0\u3488\0\u34da\0\u352c\0\u019a\0\u357e\0\122"+
    "\0\u21f4\0\u35d0\0\u114c\0\u114c\0\u3622\0\u3674\0\u36c6\0\u3718"+
    "\0\122\0\u376a\0\u37bc\0\u380e\0\u3860\0\u019a\0\u38b2\0\u3904"+
    "\0\u3956\0\u39a8\0\u39fa\0\u3a4c\0\u3a9e\0\u3af0\0\u3b42\0\u3b94"+
    "\0\u019a\0\u3be6\0\u019a\0\u019a\0\u019a\0\u3c38\0\u3c8a\0\u3cdc"+
    "\0\u3d2e\0\u3d80\0\u3dd2\0\u3e24\0\u3e76\0\u3ec8\0\u3f1a\0\u3f6c"+
    "\0\u3fbe\0\u4010\0\u4062\0\u40b4\0\u4106\0\u4158\0\u41aa\0\u019a"+
    "\0\u41fc\0\u424e\0\u42a0\0\u42f2\0\u4344\0\u4396\0\u43e8\0\u443a"+
    "\0\u448c\0\u44de\0\u019a\0\u4530\0\u019a\0\u4582\0\u45d4\0\u4626"+
    "\0\u4678\0\u46ca\0\u471c\0\u476e\0\u47c0\0\122\0\u4812\0\u4864"+
    "\0\u48b6\0\u4908\0\u495a\0\u49ac\0\u49fe\0\u4a50\0\u4aa2\0\u4af4"+
    "\0\u4b46\0\u4b98\0\u019a\0\u4bea\0\u4c3c\0\u4c8e\0\u4ce0\0\u4d32"+
    "\0\u4d84\0\u4dd6\0\u4e28\0\u4e7a\0\u4ecc\0\u4f1e\0\u4f70\0\u4fc2"+
    "\0\u5014\0\u5066\0\u50b8\0\u510a\0\u515c\0\u51ae\0\u5200\0\u5252"+
    "\0\u52a4\0\u52f6\0\u5348\0\u539a\0\u53ec\0\u543e\0\u5490\0\u54e2"+
    "\0\u5534\0\u5586\0\u55d8\0\u562a\0\u567c\0\u019a\0\u56ce\0\u5720"+
    "\0\u5772\0\u57c4\0\u5816\0\u5868\0\u019a\0\u58ba\0\u590c\0\u595e"+
    "\0\u59b0\0\u5a02\0\u5a54\0\u5aa6\0\u5af8\0\u5b4a\0\u5b9c\0\u019a"+
    "\0\u5bee\0\u5c40\0\u5c92\0\u5ce4\0\u5d36\0\u5d88\0\u5dda\0\u019a"+
    "\0\u5e2c\0\u019a\0\u5e7e\0\u5ed0\0\u5f22\0\u5f74\0\u5fc6\0\u6018"+
    "\0\u606a\0\u60bc\0\u610e\0\u6160\0\u61b2\0\u6204\0\u6256\0\u62a8"+
    "\0\u62fa\0\u634c\0\u639e\0\u019a\0\u63f0\0\u6442\0\u6494\0\u64e6"+
    "\0\u019a\0\u114c\0\u114c\0\u114c\0\u114c\0\u6538\0\u658a\0\u65dc"+
    "\0\u019a\0\u662e\0\u6680\0\u019a\0\u66d2\0\u6724\0\u6776\0\u67c8"+
    "\0\u681a\0\u686c\0\u68be\0\u6910\0\u6962\0\u019a\0\u019a\0\u69b4"+
    "\0\u6a06\0\u6a58\0\u6aaa\0\u6afc\0\u6b4e\0\u6ba0\0\u6bf2\0\u6c44"+
    "\0\u6c96\0\u019a\0\u019a\0\u6ce8\0\u019a\0\u6d3a\0\u6d8c\0\u019a"+
    "\0\u6dde\0\u6e30\0\u6e82\0\u6ed4\0\u6f26\0\u019a\0\u6f78\0\u6fca"+
    "\0\u701c\0\u019a\0\u019a\0\u706e\0\u019a\0\u019a\0\u019a\0\u019a"+
    "\0\u70c0\0\u7112\0\u7164\0\u71b6\0\u7208\0\u725a\0\u72ac\0\u72fe"+
    "\0\u7350\0\u019a\0\u73a2\0\u73f4\0\u7446\0\u7498\0\u019a\0\u74ea"+
    "\0\u019a\0\u753c\0\u758e\0\u75e0\0\u7632\0\u7684\0\u76d6\0\u7728"+
    "\0\u019a\0\u777a\0\u019a\0\u77cc\0\u019a\0\u781e\0\u019a\0\u019a"+
    "\0\u7870\0\u78c2\0\u7914\0\u019a\0\u7966\0\u79b8\0\u7a0a\0\u019a"+
    "\0\u7a5c\0\u7aae\0\u019a\0\u019a\0\u7b00\0\u114c\0\u7b52\0\u019a"+
    "\0\u019a\0\u7ba4\0\u7bf6\0\u7c48\0\u7c9a\0\u019a\0\u7cec\0\u7d3e"+
    "\0\u7d90\0\u7de2\0\u7e34\0\u7e86\0\u019a\0\u019a\0\u019a\0\u7ed8"+
    "\0\u019a\0\u019a\0\u019a\0\u019a\0\u7f2a\0\u7f7c\0\u7fce\0\u8020"+
    "\0\u8072\0\u80c4\0\u019a\0\u019a\0\u019a";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[509];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\2\3\1\4\1\5\1\6\1\7\2\10\1\2"+
    "\1\11\1\12\1\7\1\13\1\14\1\7\1\15\1\16"+
    "\1\17\1\10\1\11\1\10\1\20\1\21\1\22\1\23"+
    "\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33"+
    "\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43"+
    "\1\10\1\44\2\10\1\45\1\46\1\47\1\50\2\10"+
    "\1\51\1\52\1\10\1\53\1\54\1\55\1\56\1\57"+
    "\1\60\1\10\1\61\1\62\1\63\1\10\1\64\1\65"+
    "\1\66\1\67\1\70\1\71\1\72\1\73\1\10\1\74"+
    "\1\75\1\76\1\77\1\100\1\101\1\102\123\0\2\3"+
    "\1\0\1\3\122\0\1\103\1\104\61\0\1\55\37\0"+
    "\1\7\2\105\3\0\1\7\2\106\1\7\1\107\1\0"+
    "\1\110\1\105\1\0\1\105\7\0\1\105\14\0\15\105"+
    "\5\0\26\105\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\15\10"+
    "\5\0\26\10\12\0\2\11\10\0\1\11\104\0\2\113"+
    "\6\0\1\114\1\113\1\0\1\115\1\113\1\0\1\113"+
    "\7\0\1\113\14\0\15\113\5\0\26\113\22\0\1\116"+
    "\105\0\1\7\5\10\1\7\2\106\1\7\1\15\1\0"+
    "\1\110\3\10\7\0\1\10\14\0\15\10\5\0\26\10"+
    "\2\117\1\0\16\117\1\120\1\0\77\117\7\0\2\121"+
    "\7\0\1\121\2\0\1\121\1\0\1\121\7\0\1\121"+
    "\14\0\1\122\1\123\1\124\1\121\1\125\1\126\1\127"+
    "\1\130\2\121\1\131\2\121\5\0\26\121\35\0\1\132"+
    "\116\0\1\133\35\0\1\134\37\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\2\10\1\135\3\10\1\136\2\10\1\137\3\10"+
    "\5\0\26\10\46\0\1\140\61\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\1\141\14\10\5\0\26\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\2\10\1\142"+
    "\7\0\1\10\14\0\1\143\1\10\1\144\5\10\1\145"+
    "\4\10\5\0\26\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\4\10\1\146\10\10\5\0\26\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\3\10\7\0"+
    "\1\10\14\0\1\10\1\147\3\10\1\150\1\10\1\151"+
    "\5\10\5\0\26\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\6\10\1\152\3\10\1\153\2\10\5\0\26\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\5\10\1\154\7\10\5\0"+
    "\1\10\1\155\3\10\1\156\20\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\3\10\7\0"+
    "\1\10\14\0\4\10\1\157\2\10\1\160\5\10\5\0"+
    "\26\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\10\14\0\15\10\5\0"+
    "\1\10\1\161\24\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\1\10\1\162\5\10\1\163\5\10\5\0\26\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\5\10\1\164\7\10\5\0"+
    "\26\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\10\14\0\1\165\6\10"+
    "\1\166\5\10\5\0\5\10\1\167\20\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\5\10\1\170\7\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\4\10\1\171\10\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\2\10"+
    "\1\172\12\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\1\10\1\173\5\10\1\174\5\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\11\10\1\175\3\10"+
    "\5\0\6\10\1\176\17\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\1\10\1\177\13\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\4\10\1\200\10\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\2\10\1\201\3\10"+
    "\1\202\6\10\5\0\11\10\1\203\14\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\204\14\0\15\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\4\10\1\205\10\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\15\10\5\0\6\10"+
    "\1\206\17\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\207\14\0\15\10"+
    "\5\0\5\10\1\210\20\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\15\10\5\0\1\10\1\211\3\10\1\212\20\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\1\10\1\213\13\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\15\10"+
    "\5\0\5\10\1\214\20\10\2\103\1\0\117\103\6\104"+
    "\1\215\113\104\6\0\1\111\5\105\1\111\2\106\1\111"+
    "\1\105\1\0\1\112\3\105\7\0\1\105\14\0\15\105"+
    "\5\0\26\105\15\0\2\106\111\0\1\7\5\105\1\7"+
    "\2\106\1\7\1\107\1\0\1\110\3\105\7\0\1\105"+
    "\14\0\15\105\5\0\26\105\7\0\2\121\7\0\1\121"+
    "\2\0\1\121\1\0\1\121\7\0\1\121\14\0\15\121"+
    "\5\0\26\121\6\0\1\111\2\105\3\0\1\111\2\106"+
    "\1\111\1\105\1\0\1\112\1\105\1\0\1\105\7\0"+
    "\1\105\14\0\15\105\5\0\26\105\7\0\2\105\7\0"+
    "\1\105\2\0\1\105\1\0\1\105\7\0\1\105\14\0"+
    "\15\105\5\0\26\105\7\0\5\113\4\0\1\113\2\0"+
    "\3\113\7\0\1\113\14\0\15\113\5\0\26\113\7\0"+
    "\2\113\7\0\1\113\2\0\1\113\1\0\1\113\7\0"+
    "\1\113\14\0\15\113\5\0\26\113\16\0\1\2\116\0"+
    "\1\16\5\0\1\16\1\0\3\16\25\0\2\16\2\0"+
    "\2\16\1\0\1\16\1\0\1\16\7\0\1\16\11\0"+
    "\1\16\21\0\1\7\5\121\1\7\2\106\1\7\1\121"+
    "\1\0\1\110\3\121\7\0\1\121\14\0\15\121\5\0"+
    "\26\121\6\0\1\7\5\121\1\7\2\106\1\7\1\121"+
    "\1\0\1\110\3\121\7\0\1\121\14\0\1\121\1\216"+
    "\13\121\5\0\26\121\6\0\1\7\5\121\1\7\2\106"+
    "\1\7\1\121\1\0\1\110\3\121\7\0\1\121\14\0"+
    "\2\121\1\217\12\121\5\0\26\121\6\0\1\7\5\121"+
    "\1\7\2\106\1\7\1\121\1\0\1\110\3\121\7\0"+
    "\1\121\14\0\4\121\1\220\10\121\5\0\26\121\6\0"+
    "\1\7\5\121\1\7\2\106\1\7\1\121\1\0\1\110"+
    "\3\121\7\0\1\121\14\0\10\121\1\221\4\121\5\0"+
    "\26\121\6\0\1\7\5\121\1\7\2\106\1\7\1\121"+
    "\1\0\1\110\3\121\7\0\1\121\14\0\1\121\1\222"+
    "\13\121\5\0\26\121\6\0\1\7\5\121\1\7\2\106"+
    "\1\7\1\121\1\0\1\110\3\121\7\0\1\121\14\0"+
    "\7\121\1\223\5\121\5\0\26\121\6\0\1\7\5\121"+
    "\1\7\2\106\1\7\1\121\1\0\1\110\3\121\7\0"+
    "\1\121\14\0\5\121\1\224\7\121\5\0\26\121\6\0"+
    "\1\7\5\121\1\7\2\106\1\7\1\121\1\0\1\110"+
    "\3\121\7\0\1\121\14\0\5\121\1\225\7\121\5\0"+
    "\26\121\27\0\1\226\5\0\1\227\116\0\1\230\75\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\231\14\0\15\10\5\0\26\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\12\10\1\232\2\10\5\0"+
    "\26\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\10\14\0\1\10\1\233"+
    "\13\10\5\0\26\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\11\10\1\234\3\10\5\0\26\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\3\10\7\0"+
    "\1\10\14\0\11\10\1\235\1\10\1\236\1\10\5\0"+
    "\5\10\1\237\20\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\4\10\1\240\5\10\1\241\2\10\5\0\26\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\1\10\1\242\7\10\1\243"+
    "\2\10\1\244\5\0\6\10\1\245\17\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\1\246\14\10\5\0\11\10\1\247"+
    "\14\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\10\14\0\7\10\1\250"+
    "\5\10\5\0\26\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\5\10\1\251\7\10\5\0\26\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\3\10\7\0"+
    "\1\10\14\0\15\10\5\0\5\10\1\252\20\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\15\10\5\0\12\10\1\253"+
    "\13\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\10\14\0\15\10\5\0"+
    "\6\10\1\254\17\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\4\10\1\255\10\10\5\0\26\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\3\10\7\0"+
    "\1\10\14\0\15\10\5\0\4\10\1\256\21\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\5\10\1\257\4\10\1\260"+
    "\2\10\5\0\26\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\2\10\1\261\1\10\1\262\1\263\7\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\4\10\1\264\2\10"+
    "\1\265\5\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\4\10\1\266\10\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\2\10\1\267\2\10\1\270\7\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\1\10"+
    "\1\271\13\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\4\10\1\272\10\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\6\10\1\273\6\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\15\10\5\0\5\10"+
    "\1\274\20\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\275\14\0\15\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\13\10"+
    "\1\276\1\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\4\10\1\277\10\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\13\10\1\300\1\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\15\10\5\0\4\10"+
    "\1\301\21\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\2\10"+
    "\1\302\12\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\13\10\1\303\1\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\15\10\5\0\6\10\1\304\17\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\12\10\1\305\2\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\1\10"+
    "\1\306\13\10\5\0\4\10\1\307\21\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\4\10\1\310\10\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\12\10\1\311\2\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\312\14\0\15\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\15\10"+
    "\5\0\6\10\1\313\17\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\4\10\1\314\10\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\1\315\4\10\1\316\7\10\5\0"+
    "\26\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\317\14\0\15\10\5\0"+
    "\26\10\5\104\1\320\1\321\113\104\6\0\1\7\5\121"+
    "\1\7\2\106\1\7\1\121\1\0\1\110\3\121\7\0"+
    "\1\121\14\0\2\121\1\322\12\121\5\0\26\121\6\0"+
    "\1\7\5\121\1\7\2\106\1\7\1\121\1\0\1\110"+
    "\3\121\7\0\1\121\14\0\13\121\1\323\1\121\5\0"+
    "\26\121\6\0\1\7\5\121\1\7\2\106\1\7\1\121"+
    "\1\0\1\110\3\121\7\0\1\121\14\0\14\121\1\324"+
    "\5\0\26\121\6\0\1\7\5\121\1\7\2\106\1\7"+
    "\1\121\1\0\1\110\3\121\7\0\1\325\14\0\15\121"+
    "\5\0\26\121\6\0\1\7\5\121\1\7\2\106\1\7"+
    "\1\121\1\0\1\110\3\121\7\0\1\121\14\0\2\121"+
    "\1\326\12\121\5\0\26\121\6\0\1\7\5\121\1\7"+
    "\2\106\1\7\1\121\1\0\1\110\3\121\7\0\1\121"+
    "\14\0\5\121\1\327\7\121\5\0\26\121\6\0\1\7"+
    "\5\121\1\7\2\106\1\7\1\121\1\0\1\110\3\121"+
    "\7\0\1\330\14\0\15\121\5\0\26\121\31\0\1\331"+
    "\117\0\1\332\100\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\12\10"+
    "\1\333\2\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\4\10\1\334\10\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\1\335\14\10\5\0\26\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\4\10\1\336\10\10\5\0"+
    "\26\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\10\14\0\15\10\5\0"+
    "\12\10\1\337\13\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\1\10\1\340\13\10\5\0\26\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\3\10\7\0"+
    "\1\10\14\0\15\10\5\0\11\10\1\341\14\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\4\10\1\342\10\10\5\0"+
    "\26\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\10\14\0\1\343\14\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\12\10"+
    "\1\344\2\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\15\10\5\0\12\10\1\345\13\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\1\346\14\10\5\0\26\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\11\10\1\347\3\10\5\0"+
    "\26\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\350\14\0\15\10\5\0"+
    "\26\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\10\14\0\15\10\5\0"+
    "\11\10\1\351\14\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\4\10\1\352\10\10\5\0\26\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\3\10\7\0"+
    "\1\10\14\0\4\10\1\353\10\10\5\0\26\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\4\10\1\354\10\10\5\0"+
    "\26\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\10\14\0\2\10\1\355"+
    "\12\10\5\0\26\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\5\10\1\356\7\10\5\0\26\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\3\10\7\0"+
    "\1\10\14\0\12\10\1\357\2\10\5\0\26\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\4\10\1\360\10\10\5\0"+
    "\26\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\10\14\0\15\10\5\0"+
    "\4\10\1\361\21\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\5\10\1\362\7\10\5\0\26\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\3\10\7\0"+
    "\1\10\14\0\7\10\1\363\5\10\5\0\26\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\15\10\5\0\4\10\1\364"+
    "\21\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\10\14\0\15\10\5\0"+
    "\4\10\1\365\21\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\1\10\1\366\13\10\5\0\26\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\2\10\1\367"+
    "\7\0\1\10\14\0\11\10\1\370\3\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\5\10\1\371\7\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\2\10"+
    "\1\372\12\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\11\10\1\373\3\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\374\14\0\15\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\1\10\1\375\13\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\2\10\1\376\12\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\4\10"+
    "\1\377\10\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\11\10\1\u0100\3\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\1\10\1\u0101\13\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\u0102\14\0\15\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\4\10\1\u0103\10\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\15\10"+
    "\5\0\12\10\1\u0104\13\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\1\u0105\14\10\5\0\26\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\3\10\7\0"+
    "\1\10\14\0\4\10\1\u0106\10\10\5\0\26\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\1\u0107\14\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\7\10\1\u0108\5\10"+
    "\5\0\12\10\1\u0109\13\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\5\10\1\u010a\7\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\15\10\5\0\5\10\1\u010b\20\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\15\10\5\0\4\10"+
    "\1\u010c\21\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\4\10"+
    "\1\u010d\10\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\7\10\1\u010e\5\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\15\10\5\0\12\10\1\u010f\13\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\1\u0110\14\10\5\0"+
    "\26\10\6\0\1\7\5\121\1\7\2\106\1\7\1\121"+
    "\1\0\1\110\3\121\7\0\1\121\14\0\3\121\1\u0111"+
    "\11\121\5\0\26\121\6\0\1\7\5\121\1\7\2\106"+
    "\1\7\1\121\1\0\1\110\3\121\7\0\1\121\14\0"+
    "\11\121\1\u0112\3\121\5\0\26\121\6\0\1\7\5\121"+
    "\1\7\2\106\1\7\1\121\1\0\1\110\3\121\7\0"+
    "\1\121\14\0\3\121\1\u0113\11\121\5\0\26\121\6\0"+
    "\1\7\5\121\1\7\2\106\1\7\1\121\1\0\1\110"+
    "\3\121\7\0\1\121\14\0\1\121\1\u0114\13\121\5\0"+
    "\26\121\6\0\1\7\5\121\1\7\2\106\1\7\1\121"+
    "\1\0\1\110\3\121\7\0\1\121\14\0\1\121\1\u0115"+
    "\13\121\5\0\26\121\31\0\1\u0116\76\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\3\10\7\0"+
    "\1\u0117\14\0\15\10\5\0\26\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\3\10\7\0"+
    "\1\10\14\0\5\10\1\u0118\7\10\5\0\26\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\15\10\5\0\12\10\1\u0119"+
    "\13\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\10\14\0\5\10\1\u011a"+
    "\7\10\5\0\26\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\2\10\1\u011b\12\10\5\0\26\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\3\10\7\0"+
    "\1\10\14\0\15\10\5\0\6\10\1\u011c\17\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\2\10\1\u011d\2\10\1\u011e"+
    "\7\10\5\0\26\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\u011f\14\0"+
    "\15\10\5\0\26\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\7\10\1\u0120\5\10\5\0\26\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\3\10\7\0"+
    "\1\u0121\14\0\15\10\5\0\26\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\3\10\7\0"+
    "\1\10\14\0\1\10\1\u0122\13\10\5\0\26\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\4\10\1\u0123\10\10\5\0"+
    "\26\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\10\14\0\1\u0124\14\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\5\10"+
    "\1\u0125\7\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\4\10\1\u0126\10\10\5\0\26\10\6\0\1\111"+
    "\1\10\1\u0127\3\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\15\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\3\10\1\u0128\11\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\4\10"+
    "\1\u0129\10\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\15\10\5\0\4\10\1\u012a\21\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\1\u012b\14\10\5\0\26\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\u012c\14\0\15\10\5\0\26\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\4\10\1\u012d\10\10\5\0"+
    "\26\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\10\14\0\5\10\1\u012e"+
    "\7\10\5\0\26\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\4\10\1\u012f\10\10\5\0\26\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\3\10\7\0"+
    "\1\10\14\0\12\10\1\u0130\2\10\5\0\26\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\4\10\1\u0131\10\10\5\0"+
    "\26\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\10\14\0\3\10\1\u0132"+
    "\11\10\5\0\26\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\4\10\1\u0133\10\10\5\0\26\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\3\10\7\0"+
    "\1\10\14\0\2\10\1\u0134\12\10\5\0\26\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\2\10\1\u0135\12\10\5\0"+
    "\26\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\10\14\0\12\10\1\u0136"+
    "\2\10\5\0\26\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\1\u0137\14\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\12\10\1\u0138\2\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\1\u0139\14\10\5\0\26\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\5\10\1\u013a\7\10\5\0"+
    "\26\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\10\14\0\15\10\5\0"+
    "\4\10\1\u013b\21\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\u013c\14\0"+
    "\15\10\5\0\26\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\5\10\1\u013d\7\10\5\0\26\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\3\10\7\0"+
    "\1\u013e\14\0\15\10\5\0\26\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\3\10\7\0"+
    "\1\10\14\0\3\10\1\u013f\1\10\1\u0140\7\10\5\0"+
    "\26\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\10\14\0\5\10\1\u0141"+
    "\7\10\5\0\26\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\1\10\1\u0142\13\10\5\0\26\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\3\10\7\0"+
    "\1\10\14\0\15\10\5\0\5\10\1\u0143\20\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\5\10\1\u0144\7\10\5\0"+
    "\26\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\10\14\0\4\10\1\u0145"+
    "\10\10\5\0\26\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\4\10\1\u0146\10\10\5\0\26\10\6\0\1\7\5\121"+
    "\1\7\2\106\1\7\1\121\1\0\1\110\3\121\7\0"+
    "\1\121\14\0\1\u0147\14\121\5\0\26\121\6\0\1\7"+
    "\5\121\1\7\2\106\1\7\1\121\1\0\1\110\3\121"+
    "\7\0\1\121\14\0\12\121\1\u0148\2\121\5\0\26\121"+
    "\6\0\1\7\5\121\1\7\2\106\1\7\1\121\1\0"+
    "\1\110\3\121\7\0\1\121\14\0\1\u0149\14\121\5\0"+
    "\26\121\6\0\1\7\5\121\1\7\2\106\1\7\1\121"+
    "\1\0\1\110\3\121\7\0\1\121\14\0\1\u014a\14\121"+
    "\5\0\26\121\6\0\1\7\5\121\1\7\2\106\1\7"+
    "\1\121\1\0\1\110\3\121\7\0\1\121\14\0\2\121"+
    "\1\u014b\12\121\5\0\26\121\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\1\10\1\u014c\13\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\11\10\1\u014d\3\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\1\10\1\u014e\13\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\4\10"+
    "\1\u014f\10\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\15\10\5\0\4\10\1\u0150\21\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\1\u0151\14\10\5\0\26\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\13\10\1\u0152\1\10\5\0"+
    "\26\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\10\14\0\2\10\1\u0153"+
    "\12\10\5\0\26\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\15\10\5\0\16\10\1\u0154\7\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\3\10\7\0"+
    "\1\10\14\0\5\10\1\u0155\7\10\5\0\26\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\5\10\1\u0156\7\10\5\0"+
    "\26\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\10\14\0\15\10\5\0"+
    "\4\10\1\u0157\21\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\15\10\5\0\1\10\1\u0158\24\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\3\10\7\0"+
    "\1\10\14\0\15\10\5\0\22\10\1\u0159\3\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\1\10\1\u015a\13\10\5\0"+
    "\26\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\10\14\0\15\10\5\0"+
    "\3\10\1\u015b\22\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\7\10\1\u015c\5\10\5\0\26\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\3\10\7\0"+
    "\1\10\14\0\15\10\5\0\6\10\1\u015d\17\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\4\10\1\u015e\10\10\5\0"+
    "\26\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\10\14\0\1\u015f\14\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\11\10"+
    "\1\u0160\3\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\13\10\1\u0161\1\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\11\10\1\u0162\3\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\2\10\1\u0163\12\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\5\10"+
    "\1\u0164\7\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\11\10\1\u0165\3\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\u0166\14\0\15\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\5\10\1\u0167\7\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\u0168\14\0\15\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\15\10\5\0\4\10"+
    "\1\u0169\21\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\1\10"+
    "\1\u016a\13\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\4\10\1\u016b\10\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\4\10\1\u016c\10\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\u016d\14\0\15\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\u016e\14\0\15\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\12\10\1\u016f\2\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\15\10"+
    "\5\0\4\10\1\u0170\21\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\1\10\1\u0171\13\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\15\10\5\0\16\10\1\u0172\7\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\2\10\1\u0173\12\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\13\10"+
    "\1\u0174\1\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\11\10\1\u0175\3\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\12\10\1\u0176\2\10\5\0\26\10"+
    "\6\0\1\111\1\10\1\u0177\3\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\15\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\4\10"+
    "\1\u0178\10\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\13\10\1\u0179\1\10\5\0\26\10\6\0\1\7"+
    "\5\121\1\7\2\106\1\7\1\121\1\0\1\110\3\121"+
    "\7\0\1\121\14\0\4\121\1\u017a\10\121\5\0\26\121"+
    "\6\0\1\7\5\121\1\7\2\106\1\7\1\121\1\0"+
    "\1\110\3\121\7\0\1\121\14\0\11\121\1\u017b\3\121"+
    "\5\0\26\121\6\0\1\7\5\121\1\7\2\106\1\7"+
    "\1\121\1\0\1\110\3\121\7\0\1\121\14\0\4\121"+
    "\1\u017c\10\121\5\0\26\121\6\0\1\7\5\121\1\7"+
    "\2\106\1\7\1\121\1\0\1\110\3\121\7\0\1\121"+
    "\14\0\1\u017d\14\121\5\0\26\121\6\0\1\7\5\121"+
    "\1\7\2\106\1\7\1\121\1\0\1\110\3\121\7\0"+
    "\1\121\14\0\3\121\1\u017e\11\121\5\0\26\121\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\1\u017f\14\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\12\10\1\u0180\2\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\11\10"+
    "\1\u0181\3\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\4\10\1\u0182\10\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\1\10\1\u0183\13\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\11\10\1\u0184\3\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\1\10"+
    "\1\u0185\13\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\4\10\1\u0186\10\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\4\10\1\u0187\10\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\4\10\1\u0188\10\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\4\10"+
    "\1\u0189\10\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\u018a"+
    "\14\0\15\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\11\10\1\u018b\3\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\5\10\1\u018c\7\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\5\10\1\u018d\7\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\12\10"+
    "\1\u018e\2\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\5\10\1\u018f\7\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\1\10\1\u0190\13\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\15\10\5\0\12\10"+
    "\1\u0191\13\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\12\10"+
    "\1\u0192\2\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\1\10\1\u0193\13\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\15\10\5\0\6\10\1\u0194\17\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\2\10\1\u0195\12\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\2\10\1\u0196\7\0\1\10\14\0"+
    "\15\10\5\0\26\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\12\10\1\u0197\2\10\5\0\26\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\3\10\7\0"+
    "\1\10\14\0\4\10\1\u0198\10\10\5\0\26\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\u0199\14\0\15\10\5\0\26\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\13\10\1\u019a\1\10\5\0"+
    "\26\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\10\14\0\11\10\1\u019b"+
    "\3\10\5\0\26\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\12\10\1\u019c\2\10\5\0\26\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\3\10\7\0"+
    "\1\10\14\0\15\10\5\0\4\10\1\u019d\21\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\u019e\14\0\15\10\5\0\26\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\u019f\14\0\15\10\5\0\26\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\1\u01a0\14\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\1\10\1\u01a1\13\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\u01a2\14\0\15\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\u01a3\14\0\15\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\u01a4\14\0\15\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\4\10"+
    "\1\u01a5\10\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\15\10\5\0\11\10\1\u01a6\14\10\6\0\1\7"+
    "\5\121\1\7\2\106\1\7\1\121\1\0\1\110\3\121"+
    "\7\0\1\121\14\0\1\u01a7\14\121\5\0\26\121\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\u01a8\14\0\15\10\5\0\26\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\4\10\1\u01a9\10\10\5\0"+
    "\26\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\10\14\0\13\10\1\u01aa"+
    "\1\10\5\0\26\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\5\10\1\u01ab\7\10\5\0\26\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\3\10\7\0"+
    "\1\10\14\0\1\u01ac\14\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\13\10\1\u01ad\1\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\11\10\1\u01ae\3\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\11\10"+
    "\1\u01af\3\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\11\10\1\u01b0\3\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\11\10\1\u01b1\3\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\u01b2\14\0\15\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\7\10\1\u01b3\5\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\u01b4\14\0\15\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\5\10"+
    "\1\u01b5\7\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\5\10\1\u01b6\7\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\u01b7\14\0\15\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\u01b8\14\0\15\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\7\10\1\u01b9\5\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\3\10\1\u01ba\11\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\4\10"+
    "\1\u01bb\10\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\u01bc"+
    "\14\0\15\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\15\10\5\0\11\10\1\u01bd\14\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\2\10\1\u01be\12\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\15\10\5\0\1\10"+
    "\1\u01bf\24\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\2\10\1\u01c0\7\0\1\10\14\0"+
    "\15\10\5\0\26\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\12\10\1\u01c1\2\10\5\0\26\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\3\10\7\0"+
    "\1\10\14\0\12\10\1\u01c2\2\10\5\0\26\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\12\10\1\u01c3\2\10\5\0"+
    "\26\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\2\10\1\u01c4\7\0\1\10\14\0\15\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\7\10"+
    "\1\u01c5\5\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\2\10\1\u01c6\12\10\5\0\26\10\6\0\1\7"+
    "\5\121\1\7\2\106\1\7\1\121\1\0\1\110\3\121"+
    "\7\0\1\121\14\0\4\121\1\u01c7\10\121\5\0\26\121"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\15\10\5\0\16\10"+
    "\1\u01c8\7\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\11\10"+
    "\1\u01c9\3\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\1\u01ca\14\10\5\0\26\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\3\10\7\0"+
    "\1\10\14\0\4\10\1\u01cb\10\10\5\0\26\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\2\10\1\u01cc\12\10\5\0"+
    "\26\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\10\14\0\13\10\1\u01cd"+
    "\1\10\5\0\26\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\15\10\5\0\4\10\1\u01ce\21\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\3\10\7\0"+
    "\1\10\14\0\15\10\5\0\1\10\1\u01cf\24\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\4\10\1\u01d0\10\10\5\0"+
    "\26\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\10\14\0\7\10\1\u01d1"+
    "\5\10\5\0\26\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\2\10\1\u01d2\12\10\5\0\26\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\3\10\7\0"+
    "\1\10\14\0\2\10\1\u01d3\12\10\5\0\26\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\11\10\1\u01d4\3\10\5\0"+
    "\26\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\10\14\0\7\10\1\u01d5"+
    "\5\10\5\0\26\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\4\10\1\u01d6\10\10\5\0\26\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\3\10\7\0"+
    "\1\u01d7\14\0\15\10\5\0\26\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\3\10\7\0"+
    "\1\10\14\0\4\10\1\u01d8\10\10\5\0\26\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\u01d9\14\0\15\10\5\0\26\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\u01da\14\0\15\10\5\0\26\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\4\10\1\u01db\10\10\5\0"+
    "\26\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\10\14\0\2\10\1\u01dc"+
    "\12\10\5\0\26\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\12\10\1\u01dd\2\10\5\0\26\10\6\0\1\7\5\121"+
    "\1\7\2\106\1\7\1\121\1\0\1\110\3\121\7\0"+
    "\1\121\14\0\14\121\1\u01de\5\0\26\121\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\1\10\1\u01df\13\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\15\10\5\0\1\10"+
    "\1\u01e0\24\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\3\10"+
    "\1\u01e1\11\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\1\10\1\u01e2\13\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\2\10\1\u01e3\12\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\12\10\1\u01e4\2\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\13\10"+
    "\1\u01e5\1\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\2\10\1\u01e6\12\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\2\10\1\u01e7\12\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\2\10\1\u01e8\12\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\7\10"+
    "\1\u01e9\5\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\7\10\1\u01ea\5\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\1\10\1\u01eb\13\10\5\0\26\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\12\10\1\u01ec\2\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\1\u01ed"+
    "\14\10\5\0\26\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\11\10\1\u01ee\3\10\5\0\26\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\3\10\7\0"+
    "\1\10\14\0\11\10\1\u01ef\3\10\5\0\26\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\4\10\1\u01f0\10\10\5\0"+
    "\26\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\10\14\0\12\10\1\u01f1"+
    "\2\10\5\0\26\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\3\10\1\u01f2\11\10\5\0\26\10\6\0\1\111\5\10"+
    "\1\111\2\106\1\111\1\10\1\0\1\112\3\10\7\0"+
    "\1\10\14\0\2\10\1\u01f3\12\10\5\0\26\10\6\0"+
    "\1\111\5\10\1\111\2\106\1\111\1\10\1\0\1\112"+
    "\3\10\7\0\1\10\14\0\2\10\1\u01f4\12\10\5\0"+
    "\26\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\u01f5\14\0\15\10\5\0"+
    "\26\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\u01f6\14\0\15\10\5\0"+
    "\26\10\6\0\1\111\5\10\1\111\2\106\1\111\1\10"+
    "\1\0\1\112\3\10\7\0\1\10\14\0\2\10\1\u01f7"+
    "\12\10\5\0\26\10\6\0\1\111\5\10\1\111\2\106"+
    "\1\111\1\10\1\0\1\112\3\10\7\0\1\10\14\0"+
    "\1\u01f8\14\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\7\10\1\u01f9\5\10\5\0\26\10\6\0\1\111"+
    "\5\10\1\111\2\106\1\111\1\10\1\0\1\112\3\10"+
    "\7\0\1\10\14\0\15\10\5\0\4\10\1\u01fa\21\10"+
    "\6\0\1\111\5\10\1\111\2\106\1\111\1\10\1\0"+
    "\1\112\3\10\7\0\1\10\14\0\11\10\1\u01fb\3\10"+
    "\5\0\26\10\6\0\1\111\5\10\1\111\2\106\1\111"+
    "\1\10\1\0\1\112\3\10\7\0\1\10\14\0\2\10"+
    "\1\u01fc\12\10\5\0\26\10\6\0\1\111\5\10\1\111"+
    "\2\106\1\111\1\10\1\0\1\112\3\10\7\0\1\10"+
    "\14\0\4\10\1\u01fd\10\10\5\0\26\10";

  private static int [] zzUnpackTrans() {
    int [] result = new int[33046];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String[] ZZ_ERROR_MSG = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\1\1\1\11\5\1\1\11\5\1\2\11"+
    "\1\1\1\11\1\1\2\11\1\1\7\11\1\1\4\11"+
    "\7\1\5\11\25\1\1\0\2\1\3\0\1\1\1\11"+
    "\3\0\1\11\11\1\1\0\1\11\4\1\1\11\65\1"+
    "\2\0\1\11\67\1\1\11\1\0\7\1\1\11\1\0"+
    "\73\1\1\11\347\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[509];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private CharSequence zzBuffer = "";

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /**
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
  public _ResLexer() {
    this((java.io.Reader)null);
  }


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  _ResLexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    int size = 0;
    for (int i = 0, length = packed.length(); i < length; i += 2) {
      size += packed.charAt(i);
    }
    char[] map = new char[size];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < packed.length()) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }

  public final int getTokenStart() {
    return zzStartRead;
  }

  public final int getTokenEnd() {
    return getTokenStart() + yylength();
  }

  public void reset(CharSequence buffer, int start, int end, int initialState) {
    zzBuffer = buffer;
    zzCurrentPos = zzMarkedPos = zzStartRead = start;
    zzAtEOF  = false;
    zzAtBOL = true;
    zzEndRead = end;
    yybegin(initialState);
  }

  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   *
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {
    return true;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final CharSequence yytext() {
    return zzBuffer.subSequence(zzStartRead, zzMarkedPos);
  }


  /**
   * Returns the character at position <tt>pos</tt> from the
   * matched text.
   *
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch.
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer.charAt(zzStartRead+pos);
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of
   * yypushback(int) and a match-all fallback rule) this method
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() {
    if (!zzEOFDone) {
      zzEOFDone = true;
      return;

    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + ZZ_CMAP(zzInput) ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        zzDoEOF();
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { return BAD_CHARACTER;
            } 
            // fall through
          case 110: break;
          case 2: 
            { return NLS;
            } 
            // fall through
          case 111: break;
          case 3: 
            { return WS;
            } 
            // fall through
          case 112: break;
          case 4: 
            { return MATHIDENTIFIER;
            } 
            // fall through
          case 113: break;
          case 5: 
            { return IDENTIFIER;
            } 
            // fall through
          case 114: break;
          case 6: 
            { return INT;
            } 
            // fall through
          case 115: break;
          case 7: 
            { return STRING;
            } 
            // fall through
          case 116: break;
          case 8: 
            { return POUND;
            } 
            // fall through
          case 117: break;
          case 9: 
            { return DOT;
            } 
            // fall through
          case 118: break;
          case 10: 
            { return LPAREN;
            } 
            // fall through
          case 119: break;
          case 11: 
            { return RPAREN;
            } 
            // fall through
          case 120: break;
          case 12: 
            { return COLON;
            } 
            // fall through
          case 121: break;
          case 13: 
            { return SEMICOLON;
            } 
            // fall through
          case 122: break;
          case 14: 
            { return COMMA;
            } 
            // fall through
          case 123: break;
          case 15: 
            { return DBL_BAR;
            } 
            // fall through
          case 124: break;
          case 16: 
            { return LANGLE;
            } 
            // fall through
          case 125: break;
          case 17: 
            { return RANGLE;
            } 
            // fall through
          case 126: break;
          case 18: 
            { return LCEIL;
            } 
            // fall through
          case 127: break;
          case 19: 
            { return RCEIL;
            } 
            // fall through
          case 128: break;
          case 20: 
            { return LBRACK;
            } 
            // fall through
          case 129: break;
          case 21: 
            { return RBRACK;
            } 
            // fall through
          case 130: break;
          case 22: 
            { return BAR;
            } 
            // fall through
          case 131: break;
          case 23: 
            { return LBRACE;
            } 
            // fall through
          case 132: break;
          case 24: 
            { return RBRACE;
            } 
            // fall through
          case 133: break;
          case 25: 
            { return EXISTS;
            } 
            // fall through
          case 134: break;
          case 26: 
            { return FORALL;
            } 
            // fall through
          case 135: break;
          case 27: 
            { return TRIANGLEQ;
            } 
            // fall through
          case 136: break;
          case 28: 
            { return EQUALS;
            } 
            // fall through
          case 137: break;
          case 29: 
            { return NEQUALS;
            } 
            // fall through
          case 138: break;
          case 30: 
            { return AND;
            } 
            // fall through
          case 139: break;
          case 31: 
            { return OR;
            } 
            // fall through
          case 140: break;
          case 32: 
            { return LINE_COMMENT;
            } 
            // fall through
          case 141: break;
          case 33: 
            { return MULTILINE_COMMENT;
            } 
            // fall through
          case 142: break;
          case 34: 
            { return MATHBINDERIDENTIFIER;
            } 
            // fall through
          case 143: break;
          case 35: 
            { return COLON_COLON;
            } 
            // fall through
          case 144: break;
          case 36: 
            { return COLON_EQUALS;
            } 
            // fall through
          case 145: break;
          case 37: 
            { return IF;
            } 
            // fall through
          case 146: break;
          case 38: 
            { return IS;
            } 
            // fall through
          case 147: break;
          case 39: 
            { return PIECEWISE;
            } 
            // fall through
          case 148: break;
          case 40: 
            { return OF;
            } 
            // fall through
          case 149: break;
          case 41: 
            { return DO;
            } 
            // fall through
          case 150: break;
          case 42: 
            { return BY;
            } 
            // fall through
          case 151: break;
          case 43: 
            { return IF_PROG;
            } 
            // fall through
          case 152: break;
          case 44: 
            { return COLON_EQUALS_COLON;
            } 
            // fall through
          case 153: break;
          case 45: 
            { return END;
            } 
            // fall through
          case 154: break;
          case 46: 
            { return FOR;
            } 
            // fall through
          case 155: break;
          case 47: 
            { return DEFINITION;
            } 
            // fall through
          case 156: break;
          case 48: 
            { return VAR;
            } 
            // fall through
          case 157: break;
          case 49: 
            { return IND_BASE;
            } 
            // fall through
          case 158: break;
          case 50: 
            { return ELSE;
            } 
            // fall through
          case 159: break;
          case 51: 
            { return FROM;
            } 
            // fall through
          case 160: break;
          case 52: 
            { return TRUE;
            } 
            // fall through
          case 161: break;
          case 53: 
            { return TYPE_PARAM;
            } 
            // fall through
          case 162: break;
          case 54: 
            { return THEN;
            } 
            // fall through
          case 163: break;
          case 55: 
            { return USES;
            } 
            // fall through
          case 164: break;
          case 56: 
            { return WITH;
            } 
            // fall through
          case 165: break;
          case 57: 
            { return TYPE_FAMILY;
            } 
            // fall through
          case 166: break;
          case 58: 
            { return IND_HYPO;
            } 
            // fall through
          case 167: break;
          case 59: 
            { return FALSE;
            } 
            // fall through
          case 168: break;
          case 60: 
            { return WHILE;
            } 
            // fall through
          case 169: break;
          case 61: 
            { return ALTERS;
            } 
            // fall through
          case 170: break;
          case 62: 
            { return FAMILY;
            } 
            // fall through
          case 171: break;
          case 63: 
            { return PRECIS;
            } 
            // fall through
          case 172: break;
          case 64: 
            { return CLEARS;
            } 
            // fall through
          case 173: break;
          case 65: 
            { return RECORD;
            } 
            // fall through
          case 174: break;
          case 66: 
            { return VALUED;
            } 
            // fall through
          case 175: break;
          case 67: 
            { return ELANGLE;
            } 
            // fall through
          case 176: break;
          case 68: 
            { return EEXISTS;
            } 
            // fall through
          case 177: break;
          case 69: 
            { return ERANGLE;
            } 
            // fall through
          case 178: break;
          case 70: 
            { return EFORALL;
            } 
            // fall through
          case 179: break;
          case 71: 
            { return ENSURES;
            } 
            // fall through
          case 180: break;
          case 72: 
            { return EXTENDS;
            } 
            // fall through
          case 181: break;
          case 73: 
            { return CONCEPT;
            } 
            // fall through
          case 182: break;
          case 74: 
            { return COERCER;
            } 
            // fall through
          case 183: break;
          case 75: 
            { return MODELED;
            } 
            // fall through
          case 184: break;
          case 76: 
            { return UPDATES;
            } 
            // fall through
          case 185: break;
          case 77: 
            { return GENERIC;
            } 
            // fall through
          case 186: break;
          case 78: 
            { return LITERAL;
            } 
            // fall through
          case 187: break;
          case 79: 
            { return THEOREM;
            } 
            // fall through
          case 188: break;
          case 80: 
            { return ENHANCED;
            } 
            // fall through
          case 189: break;
          case 81: 
            { return EXEMPLAR;
            } 
            // fall through
          case 190: break;
          case 82: 
            { return REALIZED;
            } 
            // fall through
          case 191: break;
          case 83: 
            { return RESTORES;
            } 
            // fall through
          case 192: break;
          case 84: 
            { return REQUIRES;
            } 
            // fall through
          case 193: break;
          case 85: 
            { return REPLACES;
            } 
            // fall through
          case 194: break;
          case 86: 
            { return CHANGING;
            } 
            // fall through
          case 195: break;
          case 87: 
            { return FACILITY;
            } 
            // fall through
          case 196: break;
          case 88: 
            { return IMPLICIT;
            } 
            // fall through
          case 197: break;
          case 89: 
            { return EVALUATES;
            } 
            // fall through
          case 198: break;
          case 90: 
            { return OTHERWISE;
            } 
            // fall through
          case 199: break;
          case 91: 
            { return CART_PROD;
            } 
            // fall through
          case 200: break;
          case 92: 
            { return COROLLARY;
            } 
            // fall through
          case 201: break;
          case 93: 
            { return PROCEDURE;
            } 
            // fall through
          case 202: break;
          case 94: 
            { return PRESERVES;
            } 
            // fall through
          case 203: break;
          case 95: 
            { return INDUCTIVE;
            } 
            // fall through
          case 204: break;
          case 96: 
            { return RECURSIVE;
            } 
            // fall through
          case 205: break;
          case 97: 
            { return OPERATION;
            } 
            // fall through
          case 206: break;
          case 98: 
            { return EXTERNALLY;
            } 
            // fall through
          case 207: break;
          case 99: 
            { return DECREASING;
            } 
            // fall through
          case 208: break;
          case 100: 
            { return CATEGORICAL;
            } 
            // fall through
          case 209: break;
          case 101: 
            { return CONVENTIONS;
            } 
            // fall through
          case 210: break;
          case 102: 
            { return CONSTRAINTS;
            } 
            // fall through
          case 211: break;
          case 103: 
            { return ENHANCEMENT;
            } 
            // fall through
          case 212: break;
          case 104: 
            { return MAINTAINING;
            } 
            // fall through
          case 213: break;
          case 105: 
            { return REALIZATION;
            } 
            // fall through
          case 214: break;
          case 106: 
            { return RECOGNITION;
            } 
            // fall through
          case 215: break;
          case 107: 
            { return WHICH_ENTAILS;
            } 
            // fall through
          case 216: break;
          case 108: 
            { return INITIALIZATION;
            } 
            // fall through
          case 217: break;
          case 109: 
            { return CORRESPONDENCE;
            } 
            // fall through
          case 218: break;
          default:
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
