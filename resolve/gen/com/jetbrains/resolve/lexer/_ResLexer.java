/* The following code was generated by JFlex 1.7.0 tweaked for IntelliJ platform */

package com.jetbrains.resolve.lexer;

import com.intellij.lexer.FlexLexer;
import com.intellij.psi.tree.IElementType;
import com.jetbrains.resolve.ResTypes;
import java.util.*;
import static com.intellij.psi.TokenType.BAD_CHARACTER;
import static com.jetbrains.resolve.ResolveParserDefinition.*;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>ResLexer.flex</tt>
 */
class _ResLexer implements FlexLexer, ResTypes {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   * Chosen bits are [11, 6, 4]
   * Total runtime size is 14528 bytes
   */
  public static int ZZ_CMAP(int ch) {
    return ZZ_CMAP_A[(ZZ_CMAP_Y[(ZZ_CMAP_Z[ch>>10]<<6)|((ch>>4)&0x3f)]<<4)|(ch&0xf)];
  }

  /* The ZZ_CMAP_Z table has 1088 entries */
  static final char ZZ_CMAP_Z[] = zzUnpackCMap(
    "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\6\15\1\16\23\15"+
    "\1\17\1\15\1\20\1\21\12\15\1\22\10\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1"+
    "\33\1\34\1\35\1\36\1\37\2\23\1\15\1\40\14\23\1\41\1\42\20\23\1\43\10\23\1"+
    "\44\4\23\1\45\1\46\4\23\51\15\1\47\3\15\1\50\1\51\17\23\1\52\u0381\23");

  /* The ZZ_CMAP_Y table has 2752 entries */
  static final char ZZ_CMAP_Y[] = zzUnpackCMap(
    "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\1\1\11\1\12\1\13\1\14\1\13\1\15\34"+
    "\13\1\16\1\17\1\20\10\1\1\21\1\22\1\23\1\24\1\25\1\26\2\13\1\27\10\13\1\30"+
    "\11\13\1\31\1\32\1\13\1\33\1\32\1\13\1\34\4\1\1\13\1\35\1\36\1\37\1\1\2\13"+
    "\1\35\1\1\1\40\1\32\5\13\1\41\1\42\1\43\1\1\1\44\1\13\1\1\1\45\5\13\1\46\1"+
    "\47\1\50\1\13\1\35\1\51\1\13\1\52\1\53\1\1\1\13\1\54\4\1\1\55\5\1\1\56\2\13"+
    "\1\57\1\1\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\61\1\71\1\72\1\64"+
    "\1\65\1\73\1\1\1\74\1\75\1\76\1\77\1\100\1\65\1\101\1\1\1\102\1\61\1\47\1"+
    "\63\1\64\1\65\1\101\1\1\1\70\1\61\1\47\1\103\1\104\1\105\1\106\1\1\1\102\1"+
    "\75\1\107\1\110\1\44\1\65\1\111\1\1\1\112\1\61\1\1\1\110\1\44\1\65\1\111\1"+
    "\1\1\67\1\61\1\113\1\110\1\44\1\13\1\114\1\67\1\1\1\61\1\115\1\116\1\117\1"+
    "\13\1\120\1\121\1\1\1\75\1\1\1\32\2\13\1\122\1\121\1\123\2\1\1\124\1\125\1"+
    "\126\1\127\1\130\1\131\2\1\1\102\1\1\1\123\1\1\1\132\1\13\1\133\1\1\1\134"+
    "\7\1\2\13\1\35\1\135\1\123\1\136\1\137\1\140\1\141\1\123\2\13\1\142\2\13\1"+
    "\143\24\13\1\144\1\145\2\13\1\144\2\13\1\146\1\147\1\15\3\13\1\147\3\13\1"+
    "\35\2\1\1\13\1\1\5\13\1\150\1\32\45\13\1\151\1\13\1\32\1\35\4\13\1\152\1\102"+
    "\1\153\1\17\1\13\1\17\1\13\1\17\1\153\1\102\3\13\1\154\1\1\1\155\1\123\2\1"+
    "\1\123\5\13\1\31\2\13\1\156\4\13\1\46\1\13\1\133\2\1\1\75\1\13\1\157\1\150"+
    "\2\13\1\160\1\1\1\161\1\123\2\1\1\13\1\121\3\13\1\150\2\1\2\123\1\162\5\1"+
    "\1\116\2\13\1\154\1\163\1\123\2\1\1\164\1\13\1\165\1\50\2\13\1\46\1\1\2\13"+
    "\1\154\1\1\1\166\1\50\1\13\1\157\6\1\1\167\1\170\14\13\4\1\21\13\1\171\2\13"+
    "\1\171\1\172\1\13\1\157\3\13\1\173\1\174\1\175\1\133\1\174\2\1\1\176\1\135"+
    "\1\102\1\177\1\1\1\200\1\1\1\133\1\13\1\35\4\1\1\201\1\202\1\203\1\204\1\205"+
    "\1\1\2\13\1\54\1\206\1\207\1\210\1\211\1\206\2\1\1\212\1\213\1\214\1\215\1"+
    "\216\1\217\1\220\1\221\1\222\1\223\1\1\1\224\1\225\3\1\1\226\115\1\1\227\1"+
    "\230\40\1\1\231\37\1\2\13\1\232\2\13\1\232\10\13\1\233\1\234\2\13\1\142\3"+
    "\13\1\34\1\1\1\13\1\121\4\235\4\1\1\135\35\1\1\236\1\1\1\237\1\240\1\32\4"+
    "\13\1\241\1\32\4\13\1\143\1\116\1\13\1\157\1\32\4\13\1\232\1\1\1\13\1\35\3"+
    "\1\1\13\40\1\133\13\1\46\4\1\134\13\1\133\3\1\10\13\1\133\4\1\2\13\1\157\20"+
    "\13\1\133\1\13\1\242\1\1\2\13\1\232\1\135\1\13\1\31\5\13\2\1\1\243\1\244\5"+
    "\13\1\245\1\154\1\35\4\1\1\246\1\247\1\13\1\36\1\250\3\13\1\154\1\244\2\13"+
    "\1\154\1\1\1\123\1\1\1\251\1\50\1\13\1\46\1\13\1\121\1\1\1\13\1\133\1\56\2"+
    "\13\1\36\1\135\1\123\1\1\1\123\2\13\1\54\1\1\1\252\1\123\1\13\1\253\3\13\1"+
    "\254\1\255\1\256\1\35\1\76\1\257\1\260\1\235\11\1\2\13\1\36\1\123\72\13\1"+
    "\154\1\13\1\261\2\13\1\160\120\1\26\13\1\157\6\13\1\106\2\1\1\121\1\262\1"+
    "\65\1\263\1\264\6\13\1\17\1\1\1\164\25\13\1\157\1\1\4\13\1\244\2\13\1\31\2"+
    "\1\1\133\3\1\1\265\1\45\1\1\1\107\1\266\7\13\1\133\1\177\1\123\1\32\1\267"+
    "\1\32\1\35\1\270\4\13\1\232\1\271\1\272\1\170\1\1\1\273\1\13\1\15\1\274\2"+
    "\157\2\1\7\13\1\35\4\1\3\13\1\150\20\1\1\13\1\133\3\13\1\102\2\1\1\13\1\232"+
    "\1\1\1\13\1\35\3\1\1\13\1\157\2\13\1\275\1\276\2\1\11\13\1\157\1\123\65\1"+
    "\1\277\2\13\1\300\1\13\1\46\12\1\1\13\1\46\1\13\1\106\4\1\3\13\1\301\4\1\1"+
    "\102\1\302\1\13\1\154\2\1\1\13\1\133\10\1\3\13\1\46\1\13\1\46\1\13\1\36\10"+
    "\1\4\13\1\54\73\1\1\164\2\13\1\31\2\1\1\75\1\1\1\164\2\13\2\1\1\13\1\54\1"+
    "\123\1\164\1\13\1\121\1\75\4\1\1\164\2\13\1\36\1\303\1\123\21\1\1\123\25\1"+
    "\1\123\7\1\1\123\27\1\1\123\2\1\2\13\1\35\1\1\1\123\6\1\1\123\32\1\1\123\66"+
    "\1\1\123\72\1\66\13\1\232\11\1\6\13\1\36\71\1\2\13\1\232\75\1\43\13\1\54\2"+
    "\1\1\123\16\1\1\123\72\1\4\13\1\150\1\102\3\1\1\164\6\1\1\17\77\1\5\13\1\266"+
    "\3\13\1\153\1\304\1\305\1\306\3\13\1\307\1\310\1\13\1\311\1\312\1\44\24\13"+
    "\1\313\1\13\1\44\1\143\1\13\1\143\1\13\1\266\1\13\1\266\1\232\1\13\1\232\1"+
    "\13\1\65\1\13\1\65\1\13\1\314\3\315\25\1\1\123\112\1\1\306\1\13\1\316\1\317"+
    "\1\320\1\321\1\322\1\323\1\324\1\160\1\325\1\160\24\1\55\13\1\121\2\1\103"+
    "\13\1\150\15\13\1\157\76\1\41\13\1\157\36\1");

  /* The ZZ_CMAP_A table has 3424 entries */
  static final char ZZ_CMAP_A[] = zzUnpackCMap(
    "\11\0\1\3\1\2\1\1\1\4\1\2\22\0\1\3\1\14\1\20\1\25\1\7\2\0\1\16\1\27\1\30\1"+
    "\6\1\14\1\33\1\14\1\26\1\5\1\13\10\23\1\12\1\31\1\32\1\14\1\67\1\14\2\0\2"+
    "\7\1\75\1\102\1\103\1\106\1\107\1\7\1\110\2\7\1\112\2\7\1\114\1\76\1\7\1\113"+
    "\1\7\1\116\1\22\1\117\1\120\3\7\1\42\1\21\1\43\1\0\1\10\1\15\1\52\1\73\1\77"+
    "\1\64\1\55\1\57\1\54\1\100\1\34\2\7\1\51\1\104\1\53\1\60\1\101\1\65\1\56\1"+
    "\62\1\63\1\105\1\24\1\115\1\61\1\74\1\111\1\45\1\44\1\46\1\14\6\0\1\1\14\0"+
    "\4\7\4\0\1\7\1\0\1\14\10\0\1\7\4\0\1\7\5\0\27\7\1\14\17\7\1\0\12\7\4\0\14"+
    "\7\16\0\5\7\7\0\1\7\1\0\1\7\1\0\5\7\1\0\2\7\2\0\4\7\10\0\1\7\1\0\3\7\1\0\1"+
    "\7\1\0\5\7\2\17\3\7\1\17\2\7\1\17\2\7\1\17\3\7\1\0\1\17\2\7\1\17\1\7\2\17"+
    "\7\7\31\17\14\7\1\0\13\7\10\0\16\7\11\0\26\7\2\0\1\7\6\0\10\7\7\0\14\7\5\0"+
    "\3\7\30\0\1\7\4\0\12\11\4\0\6\7\1\0\1\7\17\0\2\7\7\0\2\7\12\11\3\7\2\0\2\7"+
    "\1\0\16\7\15\0\11\7\13\0\1\7\16\0\12\11\6\7\4\0\2\7\4\0\1\7\5\0\6\7\4\0\1"+
    "\7\11\0\1\7\3\0\1\7\7\0\11\7\7\0\1\7\1\0\13\7\7\0\26\7\3\0\1\7\2\0\1\7\7\0"+
    "\12\7\4\0\12\11\1\0\7\7\1\0\7\7\5\0\10\7\2\0\2\7\2\0\26\7\1\0\7\7\1\0\1\7"+
    "\3\0\4\7\3\0\1\7\20\0\1\7\15\0\2\7\1\0\5\7\7\0\1\7\11\0\6\7\4\0\2\7\1\0\2"+
    "\7\1\0\2\7\1\0\2\7\17\0\4\7\1\0\1\7\7\0\12\11\2\0\3\7\20\0\11\7\1\0\3\7\1"+
    "\0\16\7\1\0\2\7\1\0\5\7\3\0\1\7\2\0\1\7\22\0\1\7\1\0\6\7\3\0\3\7\1\0\4\7\3"+
    "\0\2\7\1\0\1\7\1\0\2\7\3\0\2\7\3\0\3\7\3\0\14\7\17\0\1\7\13\0\10\7\1\0\6\7"+
    "\1\0\5\7\3\0\1\7\12\0\2\7\7\0\2\7\15\0\13\7\2\0\1\7\14\0\6\7\5\0\22\7\3\0"+
    "\10\7\1\0\11\7\1\0\1\7\2\0\7\7\11\0\1\7\1\0\2\7\13\0\1\7\12\11\7\0\2\7\1\0"+
    "\1\7\2\0\2\7\1\0\1\7\2\0\1\7\6\0\4\7\1\0\7\7\1\0\3\7\1\0\1\7\1\0\1\7\2\0\2"+
    "\7\1\0\4\7\1\0\2\7\11\0\1\7\2\0\5\7\1\0\1\7\11\0\12\11\2\0\14\7\1\0\24\7\13"+
    "\0\5\7\22\0\7\7\4\0\4\7\3\0\1\7\3\0\2\7\7\0\3\7\4\0\15\7\14\0\1\7\1\0\6\7"+
    "\1\0\1\7\5\0\1\7\2\0\13\7\1\0\15\7\1\0\4\7\2\0\7\7\1\0\1\7\1\0\4\7\2\0\1\7"+
    "\1\0\4\7\2\0\7\7\1\0\1\7\1\0\4\7\2\0\15\7\13\0\15\7\2\0\14\7\3\0\17\7\1\0"+
    "\6\7\23\0\1\7\3\0\2\7\3\0\11\7\1\0\1\7\5\0\16\7\2\0\14\7\5\0\7\7\17\0\1\7"+
    "\15\0\7\7\7\0\16\7\15\0\2\7\12\11\3\0\3\7\11\0\4\7\1\0\4\7\3\0\2\7\11\0\6"+
    "\7\2\0\6\7\2\0\10\7\1\0\1\7\1\0\1\7\1\0\1\7\1\0\6\7\1\0\7\7\1\0\1\7\3\0\3"+
    "\7\1\0\7\7\3\0\4\7\2\0\6\7\14\0\2\1\12\0\1\7\14\0\1\7\15\0\1\7\2\0\1\17\4"+
    "\0\1\7\2\0\12\7\1\0\1\17\2\0\1\14\1\7\1\17\2\7\1\17\6\0\1\17\1\0\1\7\1\0\1"+
    "\7\1\0\4\7\1\0\13\7\2\0\4\7\5\0\5\7\4\0\1\7\2\0\1\14\1\0\1\14\1\0\1\14\23"+
    "\0\2\14\21\0\10\14\14\0\1\50\2\0\1\47\1\0\1\14\2\0\2\14\5\0\1\14\1\0\1\14"+
    "\6\0\2\14\3\0\1\14\7\0\1\35\1\0\1\71\1\72\2\14\15\0\1\14\3\0\1\14\6\0\1\14"+
    "\4\0\1\14\7\0\1\14\13\0\1\66\3\0\1\70\1\14\2\0\2\14\4\0\2\14\6\0\2\14\10\0"+
    "\2\14\4\0\2\14\2\0\2\14\6\0\1\14\6\0\3\14\1\0\1\14\10\0\4\14\12\0\4\14\2\0"+
    "\1\14\1\0\3\14\15\0\1\40\1\41\16\0\1\36\1\37\13\0\6\14\5\0\3\14\1\0\1\14\13"+
    "\0\17\7\1\0\5\7\6\0\4\7\3\0\2\7\14\0\7\7\1\0\7\7\6\0\3\7\11\0\11\7\7\0\5\7"+
    "\2\0\5\7\3\0\7\7\6\0\3\7\12\11\2\7\13\0\11\7\2\0\27\7\2\0\4\7\11\0\12\7\1"+
    "\0\3\7\1\0\4\7\1\0\4\7\10\0\1\7\11\0\6\7\3\0\1\7\4\0\3\7\1\0\10\7\4\0\7\7"+
    "\3\0\1\7\6\0\1\7\3\0\2\7\2\0\5\7\2\0\1\7\1\0\1\7\30\0\3\7\3\0\6\7\2\0\6\7"+
    "\2\0\6\7\11\0\7\7\4\0\5\7\3\0\5\7\5\0\1\7\1\0\10\7\1\0\5\7\1\0\1\7\1\0\2\7"+
    "\1\0\2\7\1\0\12\7\3\0\2\7\13\0\5\7\1\0\25\7\4\0\1\7\6\0\12\7\2\0\6\7\2\0\6"+
    "\7\2\0\6\7\2\0\3\7\3\0\14\7\1\0\16\7\1\0\2\7\1\0\5\7\4\0\10\7\1\0\5\7\12\0"+
    "\6\7\2\0\1\7\1\0\14\7\1\0\2\7\3\0\1\7\2\0\11\7\6\0\6\7\1\0\3\7\1\0\7\7\1\0"+
    "\4\7\15\0\1\7\2\0\2\7\2\0\2\7\1\17\1\7\1\0\14\7\1\0\1\7\1\0\7\7\1\0\21\7\1"+
    "\0\4\7\2\0\10\7\1\0\7\7\1\0\13\7\1\17\1\0\4\7\1\0\5\7\1\0\1\7\3\0\14\7\2\0"+
    "\13\7\1\0\10\7\2\0\22\11\1\0\2\7\1\0\1\7\2\0\1\7\1\0\12\7\1\0\4\7\1\0\1\7"+
    "\1\0\1\7\6\0\1\7\4\0\1\7\1\0\1\7\1\0\1\7\1\0\3\7\1\0\2\7\1\0\1\7\2\0\1\7\1"+
    "\0\1\7\1\0\1\7\1\0\1\7\1\0\1\7\1\0\2\7\1\0\1\7\2\0\4\7\1\0\7\7\1\0\4\7\1\0"+
    "\4\7\1\0\1\7\1\0\12\7\1\0\5\7\1\0\3\7\1\0\5\7\1\0\5\7");

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\2\3\1\1\1\4\1\5\2\6"+
    "\2\4\1\5\1\7\1\1\1\10\1\11\1\12\1\13"+
    "\1\14\1\15\1\16\1\5\1\17\1\20\1\21\1\22"+
    "\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32"+
    "\7\5\1\33\1\34\1\35\1\36\1\37\23\5\1\40"+
    "\1\41\1\0\1\4\5\0\1\7\11\4\1\0\1\42"+
    "\1\43\1\5\1\44\1\45\1\46\11\5\1\47\5\5"+
    "\1\50\1\51\20\5\1\52\12\5\1\41\6\4\1\37"+
    "\1\4\2\0\1\53\5\5\1\54\12\5\1\55\21\5"+
    "\1\56\22\5\1\57\1\5\1\41\1\0\1\4\1\36"+
    "\1\35\4\4\1\60\1\0\3\5\1\61\12\5\1\62"+
    "\1\5\1\63\1\64\1\65\22\5\1\66\12\5\1\67"+
    "\1\5\1\70\3\5\5\4\1\71\14\5\1\72\42\5"+
    "\1\73\5\4\1\5\1\74\12\5\1\75\7\5\1\76"+
    "\1\5\1\77\21\5\1\100\4\5\1\101\1\102\1\103"+
    "\1\104\1\105\1\4\2\5\1\106\2\5\1\107\11\5"+
    "\1\110\1\111\12\5\1\112\1\113\1\5\1\114\2\5"+
    "\1\115\5\5\1\116\1\4\2\5\1\117\1\120\1\5"+
    "\1\121\1\122\1\123\1\124\11\5\1\125\4\5\1\126"+
    "\1\5\1\127\5\5\1\4\1\5\1\130\1\5\1\131"+
    "\1\5\1\132\1\5\1\133\1\134\3\5\1\135\3\5"+
    "\1\136\2\5\1\137\1\140\1\5\1\33\1\5\1\141"+
    "\1\142\4\5\1\56\6\5\1\143\1\144\1\145\1\5"+
    "\1\146\1\147\1\150\1\151\6\5\1\152\1\153\1\154";

  private static int [] zzUnpackAction() {
    int [] result = new int[505];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\121\0\242\0\121\0\242\0\363\0\u0144\0\u0195"+
    "\0\u01e6\0\121\0\u0237\0\u0288\0\u02d9\0\u032a\0\u037b\0\121"+
    "\0\121\0\u03cc\0\121\0\u041d\0\121\0\121\0\u046e\0\121"+
    "\0\121\0\121\0\121\0\121\0\121\0\121\0\u04bf\0\121"+
    "\0\121\0\121\0\121\0\u0510\0\u0561\0\u05b2\0\u0603\0\u0654"+
    "\0\u06a5\0\u06f6\0\121\0\121\0\121\0\121\0\121\0\u0747"+
    "\0\u0798\0\u07e9\0\u083a\0\u088b\0\u08dc\0\u092d\0\u097e\0\u09cf"+
    "\0\u0a20\0\u0a71\0\u0ac2\0\u0b13\0\u0b64\0\u0bb5\0\u0c06\0\u0c57"+
    "\0\u0ca8\0\u0cf9\0\u0d4a\0\u0d9b\0\u0dec\0\u0e3d\0\u0e8e\0\u0edf"+
    "\0\u0f30\0\u0f81\0\u0fd2\0\121\0\u1023\0\u1074\0\u10c5\0\u1116"+
    "\0\u1167\0\u11b8\0\u1209\0\u125a\0\u12ab\0\u12fc\0\121\0\u134d"+
    "\0\u139e\0\u0195\0\u0195\0\121\0\u13ef\0\u1440\0\u1491\0\u14e2"+
    "\0\u1533\0\u1584\0\u15d5\0\u1626\0\u1677\0\u0195\0\u16c8\0\u1719"+
    "\0\u176a\0\u17bb\0\u180c\0\u0195\0\u0195\0\u185d\0\u18ae\0\u18ff"+
    "\0\u1950\0\u19a1\0\u19f2\0\u1a43\0\u1a94\0\u1ae5\0\u1b36\0\u1b87"+
    "\0\u1bd8\0\u1c29\0\u1c7a\0\u1ccb\0\u1d1c\0\u0195\0\u1d6d\0\u1dbe"+
    "\0\u1e0f\0\u1e60\0\u1eb1\0\u1f02\0\u1f53\0\u1fa4\0\u1ff5\0\u2046"+
    "\0\u2097\0\u20e8\0\u2139\0\u218a\0\u21db\0\u222c\0\u227d\0\u1023"+
    "\0\u22ce\0\u231f\0\u2370\0\121\0\u23c1\0\u2412\0\u2463\0\u24b4"+
    "\0\u2505\0\u0195\0\u2556\0\u25a7\0\u25f8\0\u2649\0\u269a\0\u26eb"+
    "\0\u273c\0\u278d\0\u27de\0\u282f\0\u0195\0\u2880\0\u28d1\0\u2922"+
    "\0\u2973\0\u29c4\0\u2a15\0\u2a66\0\u2ab7\0\u2b08\0\u2b59\0\u2baa"+
    "\0\u2bfb\0\u2c4c\0\u2c9d\0\u2cee\0\u2d3f\0\u2d90\0\u2de1\0\u2e32"+
    "\0\u2e83\0\u2ed4\0\u2f25\0\u2f76\0\u2fc7\0\u3018\0\u3069\0\u30ba"+
    "\0\u310b\0\u315c\0\u31ad\0\u31fe\0\u324f\0\u32a0\0\u32f1\0\u3342"+
    "\0\u3393\0\u0195\0\u33e4\0\121\0\u2097\0\u3435\0\u1023\0\u1023"+
    "\0\u3486\0\u34d7\0\u3528\0\u3579\0\121\0\u35ca\0\u361b\0\u366c"+
    "\0\u36bd\0\u0195\0\u370e\0\u375f\0\u37b0\0\u3801\0\u3852\0\u38a3"+
    "\0\u38f4\0\u3945\0\u3996\0\u39e7\0\u0195\0\u3a38\0\u0195\0\u0195"+
    "\0\u0195\0\u3a89\0\u3ada\0\u3b2b\0\u3b7c\0\u3bcd\0\u3c1e\0\u3c6f"+
    "\0\u3cc0\0\u3d11\0\u3d62\0\u3db3\0\u3e04\0\u3e55\0\u3ea6\0\u3ef7"+
    "\0\u3f48\0\u3f99\0\u3fea\0\u0195\0\u403b\0\u408c\0\u40dd\0\u412e"+
    "\0\u417f\0\u41d0\0\u4221\0\u4272\0\u42c3\0\u4314\0\u0195\0\u4365"+
    "\0\u0195\0\u43b6\0\u4407\0\u4458\0\u44a9\0\u44fa\0\u454b\0\u459c"+
    "\0\u45ed\0\121\0\u463e\0\u468f\0\u46e0\0\u4731\0\u4782\0\u47d3"+
    "\0\u4824\0\u4875\0\u48c6\0\u4917\0\u4968\0\u49b9\0\u0195\0\u4a0a"+
    "\0\u4a5b\0\u4aac\0\u4afd\0\u4b4e\0\u4b9f\0\u4bf0\0\u4c41\0\u4c92"+
    "\0\u4ce3\0\u4d34\0\u4d85\0\u4dd6\0\u4e27\0\u4e78\0\u4ec9\0\u4f1a"+
    "\0\u4f6b\0\u4fbc\0\u500d\0\u505e\0\u50af\0\u5100\0\u5151\0\u51a2"+
    "\0\u51f3\0\u5244\0\u5295\0\u52e6\0\u5337\0\u5388\0\u53d9\0\u542a"+
    "\0\u547b\0\u0195\0\u54cc\0\u551d\0\u556e\0\u55bf\0\u5610\0\u5661"+
    "\0\u0195\0\u56b2\0\u5703\0\u5754\0\u57a5\0\u57f6\0\u5847\0\u5898"+
    "\0\u58e9\0\u593a\0\u598b\0\u0195\0\u59dc\0\u5a2d\0\u5a7e\0\u5acf"+
    "\0\u5b20\0\u5b71\0\u5bc2\0\u0195\0\u5c13\0\u0195\0\u5c64\0\u5cb5"+
    "\0\u5d06\0\u5d57\0\u5da8\0\u5df9\0\u5e4a\0\u5e9b\0\u5eec\0\u5f3d"+
    "\0\u5f8e\0\u5fdf\0\u6030\0\u6081\0\u60d2\0\u6123\0\u6174\0\u0195"+
    "\0\u61c5\0\u6216\0\u6267\0\u62b8\0\u0195\0\u1023\0\u1023\0\u1023"+
    "\0\u1023\0\u6309\0\u635a\0\u63ab\0\u0195\0\u63fc\0\u644d\0\u0195"+
    "\0\u649e\0\u64ef\0\u6540\0\u6591\0\u65e2\0\u6633\0\u6684\0\u66d5"+
    "\0\u6726\0\u0195\0\u0195\0\u6777\0\u67c8\0\u6819\0\u686a\0\u68bb"+
    "\0\u690c\0\u695d\0\u69ae\0\u69ff\0\u6a50\0\u0195\0\u0195\0\u6aa1"+
    "\0\u0195\0\u6af2\0\u6b43\0\u0195\0\u6b94\0\u6be5\0\u6c36\0\u6c87"+
    "\0\u6cd8\0\u0195\0\u6d29\0\u6d7a\0\u6dcb\0\u0195\0\u0195\0\u6e1c"+
    "\0\u0195\0\u0195\0\u0195\0\u0195\0\u6e6d\0\u6ebe\0\u6f0f\0\u6f60"+
    "\0\u6fb1\0\u7002\0\u7053\0\u70a4\0\u70f5\0\u0195\0\u7146\0\u7197"+
    "\0\u71e8\0\u7239\0\u0195\0\u728a\0\u0195\0\u72db\0\u732c\0\u737d"+
    "\0\u73ce\0\u741f\0\u7470\0\u74c1\0\u0195\0\u7512\0\u0195\0\u7563"+
    "\0\u0195\0\u75b4\0\u0195\0\u0195\0\u7605\0\u7656\0\u76a7\0\u0195"+
    "\0\u76f8\0\u7749\0\u779a\0\u0195\0\u77eb\0\u783c\0\u0195\0\u0195"+
    "\0\u788d\0\u1023\0\u78de\0\u0195\0\u0195\0\u792f\0\u7980\0\u79d1"+
    "\0\u7a22\0\u0195\0\u7a73\0\u7ac4\0\u7b15\0\u7b66\0\u7bb7\0\u7c08"+
    "\0\u0195\0\u0195\0\u0195\0\u7c59\0\u0195\0\u0195\0\u0195\0\u0195"+
    "\0\u7caa\0\u7cfb\0\u7d4c\0\u7d9d\0\u7dee\0\u7e3f\0\u0195\0\u0195"+
    "\0\u0195";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[505];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\2\3\1\4\1\5\1\6\1\7\2\10\1\2"+
    "\1\11\1\12\1\7\1\13\1\14\1\15\1\16\1\17"+
    "\1\10\1\11\1\10\1\20\1\21\1\22\1\23\1\24"+
    "\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34"+
    "\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\10"+
    "\1\44\2\10\1\45\1\46\1\47\1\50\2\10\1\51"+
    "\1\52\1\10\1\53\1\54\1\55\1\56\1\57\1\60"+
    "\1\10\1\61\1\62\1\63\1\10\1\64\1\65\1\66"+
    "\1\67\1\70\1\71\1\72\1\73\1\10\1\74\1\75"+
    "\1\76\1\77\1\100\1\101\1\102\122\0\2\3\1\0"+
    "\1\3\121\0\1\103\1\104\60\0\1\55\37\0\1\7"+
    "\2\105\3\0\1\7\2\13\1\106\1\0\1\107\1\105"+
    "\1\0\1\105\7\0\1\105\14\0\15\105\5\0\26\105"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\15\10\5\0\26\10\12\0"+
    "\2\11\7\0\1\11\112\0\2\13\117\0\2\13\2\0"+
    "\1\112\105\0\1\7\5\10\1\7\2\13\1\15\1\0"+
    "\1\107\3\10\7\0\1\10\14\0\15\10\5\0\26\10"+
    "\2\113\1\0\15\113\1\114\1\0\77\113\7\0\2\115"+
    "\6\0\1\115\2\0\1\115\1\0\1\115\7\0\1\115"+
    "\14\0\1\116\1\117\1\120\1\115\1\121\1\122\1\123"+
    "\1\124\2\115\1\125\2\115\5\0\26\115\34\0\1\126"+
    "\115\0\1\127\35\0\1\130\37\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\2\10\1\131\3\10\1\132\2\10\1\133\3\10\5\0"+
    "\26\10\45\0\1\134\61\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\10\14\0\1\135"+
    "\14\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\2\10\1\136\7\0\1\10\14\0"+
    "\1\137\1\10\1\140\5\10\1\141\4\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\4\10\1\142\10\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\1\10\1\143\3\10"+
    "\1\144\1\10\1\145\5\10\5\0\26\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\6\10\1\146\3\10\1\147\2\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\5\10\1\150\7\10"+
    "\5\0\1\10\1\151\3\10\1\152\20\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\4\10\1\153\2\10\1\154\5\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\15\10\5\0\1\10"+
    "\1\155\24\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\1\10\1\156"+
    "\5\10\1\157\5\10\5\0\26\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\10"+
    "\14\0\5\10\1\160\7\10\5\0\26\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\1\161\6\10\1\162\5\10\5\0\5\10"+
    "\1\163\20\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\5\10\1\164"+
    "\7\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\10\14\0\4\10"+
    "\1\165\10\10\5\0\26\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\2\10\1\166\12\10\5\0\26\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\10"+
    "\14\0\1\10\1\167\5\10\1\170\5\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\11\10\1\171\3\10\5\0"+
    "\6\10\1\172\17\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\10\14\0\1\10"+
    "\1\173\13\10\5\0\26\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\4\10\1\174\10\10\5\0\26\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\10"+
    "\14\0\2\10\1\175\3\10\1\176\6\10\5\0\11\10"+
    "\1\177\14\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\200\14\0\15\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\4\10\1\201\10\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\15\10\5\0"+
    "\6\10\1\202\17\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\203\14\0\15\10"+
    "\5\0\5\10\1\204\20\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\15\10\5\0\1\10\1\205\3\10\1\206\20\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\10\14\0\1\10\1\207\13\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\15\10\5\0\5\10\1\210"+
    "\20\10\2\103\1\0\116\103\6\104\1\211\112\104\6\0"+
    "\1\110\5\105\1\110\2\13\1\105\1\0\1\111\3\105"+
    "\7\0\1\105\14\0\15\105\5\0\26\105\6\0\1\7"+
    "\5\105\1\7\2\13\1\106\1\0\1\107\3\105\7\0"+
    "\1\105\14\0\15\105\5\0\26\105\7\0\2\115\6\0"+
    "\1\115\2\0\1\115\1\0\1\115\7\0\1\115\14\0"+
    "\15\115\5\0\26\115\6\0\1\110\2\105\3\0\1\110"+
    "\2\13\1\105\1\0\1\111\1\105\1\0\1\105\7\0"+
    "\1\105\14\0\15\105\5\0\26\105\7\0\2\105\6\0"+
    "\1\105\2\0\1\105\1\0\1\105\7\0\1\105\14\0"+
    "\15\105\5\0\26\105\16\0\1\2\115\0\1\16\4\0"+
    "\1\16\1\0\3\16\25\0\2\16\2\0\2\16\1\0"+
    "\1\16\1\0\1\16\7\0\1\16\11\0\1\16\21\0"+
    "\1\7\5\115\1\7\2\13\1\115\1\0\1\107\3\115"+
    "\7\0\1\115\14\0\15\115\5\0\26\115\6\0\1\7"+
    "\5\115\1\7\2\13\1\115\1\0\1\107\3\115\7\0"+
    "\1\115\14\0\1\115\1\212\13\115\5\0\26\115\6\0"+
    "\1\7\5\115\1\7\2\13\1\115\1\0\1\107\3\115"+
    "\7\0\1\115\14\0\2\115\1\213\12\115\5\0\26\115"+
    "\6\0\1\7\5\115\1\7\2\13\1\115\1\0\1\107"+
    "\3\115\7\0\1\115\14\0\4\115\1\214\10\115\5\0"+
    "\26\115\6\0\1\7\5\115\1\7\2\13\1\115\1\0"+
    "\1\107\3\115\7\0\1\115\14\0\10\115\1\215\4\115"+
    "\5\0\26\115\6\0\1\7\5\115\1\7\2\13\1\115"+
    "\1\0\1\107\3\115\7\0\1\115\14\0\1\115\1\216"+
    "\13\115\5\0\26\115\6\0\1\7\5\115\1\7\2\13"+
    "\1\115\1\0\1\107\3\115\7\0\1\115\14\0\7\115"+
    "\1\217\5\115\5\0\26\115\6\0\1\7\5\115\1\7"+
    "\2\13\1\115\1\0\1\107\3\115\7\0\1\115\14\0"+
    "\5\115\1\220\7\115\5\0\26\115\6\0\1\7\5\115"+
    "\1\7\2\13\1\115\1\0\1\107\3\115\7\0\1\115"+
    "\14\0\5\115\1\221\7\115\5\0\26\115\26\0\1\222"+
    "\5\0\1\223\115\0\1\224\75\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\225\14\0"+
    "\15\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\10\14\0\12\10"+
    "\1\226\2\10\5\0\26\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\1\10\1\227\13\10\5\0\26\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\10"+
    "\14\0\11\10\1\230\3\10\5\0\26\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\11\10\1\231\1\10\1\232\1\10\5\0"+
    "\5\10\1\233\20\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\10\14\0\4\10"+
    "\1\234\5\10\1\235\2\10\5\0\26\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\1\10\1\236\7\10\1\237\2\10\1\240"+
    "\5\0\6\10\1\241\17\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\1\242\14\10\5\0\11\10\1\243\14\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\7\10\1\244\5\10\5\0\26\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\10\14\0\5\10\1\245\7\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\15\10\5\0\5\10\1\246"+
    "\20\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\15\10\5\0\12\10"+
    "\1\247\13\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\15\10\5\0"+
    "\6\10\1\250\17\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\10\14\0\4\10"+
    "\1\251\10\10\5\0\26\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\15\10\5\0\4\10\1\252\21\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\10"+
    "\14\0\5\10\1\253\4\10\1\254\2\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\2\10\1\255\1\10\1\256"+
    "\1\257\7\10\5\0\26\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\4\10\1\260\2\10\1\261\5\10\5\0\26\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\10\14\0\4\10\1\262\10\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\2\10\1\263\2\10\1\264"+
    "\7\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\10\14\0\1\10"+
    "\1\265\13\10\5\0\26\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\4\10\1\266\10\10\5\0\26\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\10"+
    "\14\0\6\10\1\267\6\10\5\0\26\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\15\10\5\0\5\10\1\270\20\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\271\14\0\15\10\5\0\26\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\13\10\1\272\1\10\5\0\26\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\10\14\0\4\10\1\273\10\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\13\10\1\274\1\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\15\10\5\0\4\10"+
    "\1\275\21\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\2\10\1\276"+
    "\12\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\10\14\0\13\10"+
    "\1\277\1\10\5\0\26\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\15\10\5\0\6\10\1\300\17\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\10"+
    "\14\0\12\10\1\301\2\10\5\0\26\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\1\10\1\302\13\10\5\0\4\10\1\303"+
    "\21\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\4\10\1\304\10\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\12\10\1\305"+
    "\2\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\306\14\0\15\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\15\10\5\0"+
    "\6\10\1\307\17\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\10\14\0\4\10"+
    "\1\310\10\10\5\0\26\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\1\311\4\10\1\312\7\10\5\0\26\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\313\14\0\15\10\5\0\26\10\5\104\1\314\1\315"+
    "\112\104\6\0\1\7\5\115\1\7\2\13\1\115\1\0"+
    "\1\107\3\115\7\0\1\115\14\0\2\115\1\316\12\115"+
    "\5\0\26\115\6\0\1\7\5\115\1\7\2\13\1\115"+
    "\1\0\1\107\3\115\7\0\1\115\14\0\13\115\1\317"+
    "\1\115\5\0\26\115\6\0\1\7\5\115\1\7\2\13"+
    "\1\115\1\0\1\107\3\115\7\0\1\115\14\0\14\115"+
    "\1\320\5\0\26\115\6\0\1\7\5\115\1\7\2\13"+
    "\1\115\1\0\1\107\3\115\7\0\1\321\14\0\15\115"+
    "\5\0\26\115\6\0\1\7\5\115\1\7\2\13\1\115"+
    "\1\0\1\107\3\115\7\0\1\115\14\0\2\115\1\322"+
    "\12\115\5\0\26\115\6\0\1\7\5\115\1\7\2\13"+
    "\1\115\1\0\1\107\3\115\7\0\1\115\14\0\5\115"+
    "\1\323\7\115\5\0\26\115\6\0\1\7\5\115\1\7"+
    "\2\13\1\115\1\0\1\107\3\115\7\0\1\324\14\0"+
    "\15\115\5\0\26\115\30\0\1\325\116\0\1\326\100\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\10\14\0\12\10\1\327\2\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\4\10\1\330\10\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\1\331\14\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\4\10\1\332\10\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\15\10\5\0"+
    "\12\10\1\333\13\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\10\14\0\1\10"+
    "\1\334\13\10\5\0\26\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\15\10\5\0\11\10\1\335\14\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\10"+
    "\14\0\4\10\1\336\10\10\5\0\26\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\1\337\14\10\5\0\26\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\12\10\1\340\2\10\5\0\26\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\10\14\0\15\10\5\0\12\10\1\341\13\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\1\342\14\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\11\10\1\343\3\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\344\14\0\15\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\15\10\5\0\11\10\1\345"+
    "\14\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\4\10\1\346\10\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\4\10\1\347"+
    "\10\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\10\14\0\4\10"+
    "\1\350\10\10\5\0\26\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\2\10\1\351\12\10\5\0\26\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\10"+
    "\14\0\5\10\1\352\7\10\5\0\26\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\12\10\1\353\2\10\5\0\26\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\10\14\0\4\10\1\354\10\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\15\10\5\0\4\10\1\355"+
    "\21\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\5\10\1\356\7\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\7\10\1\357"+
    "\5\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\10\14\0\15\10"+
    "\5\0\4\10\1\360\21\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\15\10\5\0\4\10\1\361\21\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\10"+
    "\14\0\1\10\1\362\13\10\5\0\26\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\2\10\1\363"+
    "\7\0\1\10\14\0\11\10\1\364\3\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\5\10\1\365\7\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\2\10\1\366\12\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\11\10\1\367"+
    "\3\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\370\14\0\15\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\1\10\1\371"+
    "\13\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\10\14\0\2\10"+
    "\1\372\12\10\5\0\26\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\4\10\1\373\10\10\5\0\26\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\10"+
    "\14\0\11\10\1\374\3\10\5\0\26\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\1\10\1\375\13\10\5\0\26\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\376\14\0\15\10\5\0\26\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\4\10\1\377\10\10\5\0\26\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\10\14\0\15\10\5\0\12\10\1\u0100\13\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\1\u0101\14\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\4\10\1\u0102\10\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\1\u0103\14\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\7\10\1\u0104\5\10"+
    "\5\0\12\10\1\u0105\13\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\5\10\1\u0106\7\10\5\0\26\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\10"+
    "\14\0\15\10\5\0\5\10\1\u0107\20\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\15\10\5\0\4\10\1\u0108\21\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\10\14\0\4\10\1\u0109\10\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\7\10\1\u010a\5\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\15\10\5\0\12\10"+
    "\1\u010b\13\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\1\u010c\14\10"+
    "\5\0\26\10\6\0\1\7\5\115\1\7\2\13\1\115"+
    "\1\0\1\107\3\115\7\0\1\115\14\0\3\115\1\u010d"+
    "\11\115\5\0\26\115\6\0\1\7\5\115\1\7\2\13"+
    "\1\115\1\0\1\107\3\115\7\0\1\115\14\0\11\115"+
    "\1\u010e\3\115\5\0\26\115\6\0\1\7\5\115\1\7"+
    "\2\13\1\115\1\0\1\107\3\115\7\0\1\115\14\0"+
    "\3\115\1\u010f\11\115\5\0\26\115\6\0\1\7\5\115"+
    "\1\7\2\13\1\115\1\0\1\107\3\115\7\0\1\115"+
    "\14\0\1\115\1\u0110\13\115\5\0\26\115\6\0\1\7"+
    "\5\115\1\7\2\13\1\115\1\0\1\107\3\115\7\0"+
    "\1\115\14\0\1\115\1\u0111\13\115\5\0\26\115\30\0"+
    "\1\u0112\76\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\u0113\14\0\15\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\5\10\1\u0114\7\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\15\10\5\0\12\10"+
    "\1\u0115\13\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\5\10\1\u0116"+
    "\7\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\10\14\0\2\10"+
    "\1\u0117\12\10\5\0\26\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\15\10\5\0\6\10\1\u0118\17\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\10"+
    "\14\0\2\10\1\u0119\2\10\1\u011a\7\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\u011b\14\0\15\10\5\0\26\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\10\14\0\7\10\1\u011c\5\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\u011d\14\0\15\10\5\0\26\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\10\14\0\1\10\1\u011e\13\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\4\10\1\u011f\10\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\1\u0120\14\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\5\10\1\u0121\7\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\4\10\1\u0122"+
    "\10\10\5\0\26\10\6\0\1\110\1\10\1\u0123\3\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\10"+
    "\14\0\15\10\5\0\26\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\3\10\1\u0124\11\10\5\0\26\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\10"+
    "\14\0\4\10\1\u0125\10\10\5\0\26\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\15\10\5\0\4\10\1\u0126\21\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\10\14\0\1\u0127\14\10\5\0\26\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\u0128\14\0\15\10\5\0\26\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\4\10\1\u0129\10\10\5\0\26\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\10\14\0\5\10\1\u012a\7\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\4\10\1\u012b\10\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\12\10\1\u012c\2\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\4\10\1\u012d"+
    "\10\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\10\14\0\3\10"+
    "\1\u012e\11\10\5\0\26\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\4\10\1\u012f\10\10\5\0\26\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\10"+
    "\14\0\2\10\1\u0130\12\10\5\0\26\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\2\10\1\u0131\12\10\5\0\26\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\10\14\0\12\10\1\u0132\2\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\1\u0133\14\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\12\10\1\u0134\2\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\1\u0135\14\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\5\10\1\u0136\7\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\15\10\5\0"+
    "\4\10\1\u0137\21\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\u0138\14\0\15\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\5\10\1\u0139"+
    "\7\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\u013a\14\0\15\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\3\10\1\u013b"+
    "\1\10\1\u013c\7\10\5\0\26\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\10"+
    "\14\0\5\10\1\u013d\7\10\5\0\26\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\1\10\1\u013e\13\10\5\0\26\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\10\14\0\15\10\5\0\5\10\1\u013f\20\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\5\10\1\u0140\7\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\4\10\1\u0141\10\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\4\10\1\u0142"+
    "\10\10\5\0\26\10\6\0\1\7\5\115\1\7\2\13"+
    "\1\115\1\0\1\107\3\115\7\0\1\115\14\0\1\u0143"+
    "\14\115\5\0\26\115\6\0\1\7\5\115\1\7\2\13"+
    "\1\115\1\0\1\107\3\115\7\0\1\115\14\0\12\115"+
    "\1\u0144\2\115\5\0\26\115\6\0\1\7\5\115\1\7"+
    "\2\13\1\115\1\0\1\107\3\115\7\0\1\115\14\0"+
    "\1\u0145\14\115\5\0\26\115\6\0\1\7\5\115\1\7"+
    "\2\13\1\115\1\0\1\107\3\115\7\0\1\115\14\0"+
    "\1\u0146\14\115\5\0\26\115\6\0\1\7\5\115\1\7"+
    "\2\13\1\115\1\0\1\107\3\115\7\0\1\115\14\0"+
    "\2\115\1\u0147\12\115\5\0\26\115\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\10"+
    "\14\0\1\10\1\u0148\13\10\5\0\26\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\11\10\1\u0149\3\10\5\0\26\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\10\14\0\1\10\1\u014a\13\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\4\10\1\u014b\10\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\15\10\5\0\4\10"+
    "\1\u014c\21\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\1\u014d\14\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\13\10\1\u014e"+
    "\1\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\10\14\0\2\10"+
    "\1\u014f\12\10\5\0\26\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\15\10\5\0\16\10\1\u0150\7\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\10"+
    "\14\0\5\10\1\u0151\7\10\5\0\26\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\5\10\1\u0152\7\10\5\0\26\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\10\14\0\15\10\5\0\4\10\1\u0153\21\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\15\10\5\0\1\10\1\u0154"+
    "\24\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\15\10\5\0\22\10"+
    "\1\u0155\3\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\1\10\1\u0156"+
    "\13\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\10\14\0\15\10"+
    "\5\0\3\10\1\u0157\22\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\7\10\1\u0158\5\10\5\0\26\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\10"+
    "\14\0\15\10\5\0\6\10\1\u0159\17\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\4\10\1\u015a\10\10\5\0\26\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\10\14\0\1\u015b\14\10\5\0\26\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\10\14\0\11\10\1\u015c\3\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\13\10\1\u015d\1\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\11\10\1\u015e\3\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\2\10\1\u015f"+
    "\12\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\10\14\0\5\10"+
    "\1\u0160\7\10\5\0\26\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\11\10\1\u0161\3\10\5\0\26\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\u0162"+
    "\14\0\15\10\5\0\26\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\5\10\1\u0163\7\10\5\0\26\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\u0164"+
    "\14\0\15\10\5\0\26\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\15\10\5\0\4\10\1\u0165\21\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\10"+
    "\14\0\1\10\1\u0166\13\10\5\0\26\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\4\10\1\u0167\10\10\5\0\26\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\10\14\0\4\10\1\u0168\10\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\u0169\14\0\15\10\5\0\26\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\u016a\14\0\15\10\5\0\26\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\12\10\1\u016b\2\10\5\0\26\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\10\14\0\15\10\5\0\4\10\1\u016c\21\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\1\10\1\u016d\13\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\15\10\5\0\16\10"+
    "\1\u016e\7\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\2\10\1\u016f"+
    "\12\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\10\14\0\13\10"+
    "\1\u0170\1\10\5\0\26\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\11\10\1\u0171\3\10\5\0\26\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\10"+
    "\14\0\12\10\1\u0172\2\10\5\0\26\10\6\0\1\110"+
    "\1\10\1\u0173\3\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\15\10\5\0\26\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\10\14\0\4\10\1\u0174\10\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\13\10\1\u0175\1\10\5\0"+
    "\26\10\6\0\1\7\5\115\1\7\2\13\1\115\1\0"+
    "\1\107\3\115\7\0\1\115\14\0\4\115\1\u0176\10\115"+
    "\5\0\26\115\6\0\1\7\5\115\1\7\2\13\1\115"+
    "\1\0\1\107\3\115\7\0\1\115\14\0\11\115\1\u0177"+
    "\3\115\5\0\26\115\6\0\1\7\5\115\1\7\2\13"+
    "\1\115\1\0\1\107\3\115\7\0\1\115\14\0\4\115"+
    "\1\u0178\10\115\5\0\26\115\6\0\1\7\5\115\1\7"+
    "\2\13\1\115\1\0\1\107\3\115\7\0\1\115\14\0"+
    "\1\u0179\14\115\5\0\26\115\6\0\1\7\5\115\1\7"+
    "\2\13\1\115\1\0\1\107\3\115\7\0\1\115\14\0"+
    "\3\115\1\u017a\11\115\5\0\26\115\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\10"+
    "\14\0\1\u017b\14\10\5\0\26\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\10"+
    "\14\0\12\10\1\u017c\2\10\5\0\26\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\11\10\1\u017d\3\10\5\0\26\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\10\14\0\4\10\1\u017e\10\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\1\10\1\u017f\13\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\11\10\1\u0180\3\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\1\10\1\u0181"+
    "\13\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\10\14\0\4\10"+
    "\1\u0182\10\10\5\0\26\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\4\10\1\u0183\10\10\5\0\26\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\10"+
    "\14\0\4\10\1\u0184\10\10\5\0\26\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\4\10\1\u0185\10\10\5\0\26\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\u0186\14\0\15\10\5\0\26\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\11\10\1\u0187\3\10\5\0\26\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\10\14\0\5\10\1\u0188\7\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\5\10\1\u0189\7\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\12\10\1\u018a\2\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\5\10\1\u018b"+
    "\7\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\10\14\0\1\10"+
    "\1\u018c\13\10\5\0\26\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\15\10\5\0\12\10\1\u018d\13\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\10"+
    "\14\0\12\10\1\u018e\2\10\5\0\26\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\1\10\1\u018f\13\10\5\0\26\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\10\14\0\15\10\5\0\6\10\1\u0190\17\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\2\10\1\u0191\12\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\2\10\1\u0192\7\0\1\10\14\0\15\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\12\10\1\u0193\2\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\4\10\1\u0194"+
    "\10\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\u0195\14\0\15\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\13\10\1\u0196"+
    "\1\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\10\14\0\11\10"+
    "\1\u0197\3\10\5\0\26\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\12\10\1\u0198\2\10\5\0\26\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\10"+
    "\14\0\15\10\5\0\4\10\1\u0199\21\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\u019a\14\0\15\10\5\0\26\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\u019b"+
    "\14\0\15\10\5\0\26\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\1\u019c\14\10\5\0\26\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\1\10\1\u019d\13\10\5\0\26\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\u019e"+
    "\14\0\15\10\5\0\26\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\u019f\14\0"+
    "\15\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\u01a0\14\0\15\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\4\10\1\u01a1"+
    "\10\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\10\14\0\15\10"+
    "\5\0\11\10\1\u01a2\14\10\6\0\1\7\5\115\1\7"+
    "\2\13\1\115\1\0\1\107\3\115\7\0\1\115\14\0"+
    "\1\u01a3\14\115\5\0\26\115\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\u01a4\14\0"+
    "\15\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\10\14\0\4\10"+
    "\1\u01a5\10\10\5\0\26\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\13\10\1\u01a6\1\10\5\0\26\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\10"+
    "\14\0\5\10\1\u01a7\7\10\5\0\26\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\1\u01a8\14\10\5\0\26\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\13\10\1\u01a9\1\10\5\0\26\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\10\14\0\11\10\1\u01aa\3\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\11\10\1\u01ab\3\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\11\10\1\u01ac\3\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\11\10\1\u01ad"+
    "\3\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\u01ae\14\0\15\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\7\10\1\u01af"+
    "\5\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\u01b0\14\0\15\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\5\10\1\u01b1"+
    "\7\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\10\14\0\5\10"+
    "\1\u01b2\7\10\5\0\26\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\u01b3\14\0"+
    "\15\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\u01b4\14\0\15\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\7\10\1\u01b5"+
    "\5\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\10\14\0\3\10"+
    "\1\u01b6\11\10\5\0\26\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\4\10\1\u01b7\10\10\5\0\26\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\u01b8"+
    "\14\0\15\10\5\0\26\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\15\10\5\0\11\10\1\u01b9\14\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\10"+
    "\14\0\2\10\1\u01ba\12\10\5\0\26\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\15\10\5\0\1\10\1\u01bb\24\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\2\10"+
    "\1\u01bc\7\0\1\10\14\0\15\10\5\0\26\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\10\14\0\12\10\1\u01bd\2\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\12\10\1\u01be\2\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\12\10\1\u01bf\2\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\2\10\1\u01c0\7\0\1\10\14\0\15\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\7\10\1\u01c1"+
    "\5\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\10\14\0\2\10"+
    "\1\u01c2\12\10\5\0\26\10\6\0\1\7\5\115\1\7"+
    "\2\13\1\115\1\0\1\107\3\115\7\0\1\115\14\0"+
    "\4\115\1\u01c3\10\115\5\0\26\115\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\10"+
    "\14\0\15\10\5\0\16\10\1\u01c4\7\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\11\10\1\u01c5\3\10\5\0\26\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\10\14\0\1\u01c6\14\10\5\0\26\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\10\14\0\4\10\1\u01c7\10\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\2\10\1\u01c8\12\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\13\10\1\u01c9\1\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\15\10\5\0"+
    "\4\10\1\u01ca\21\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\10\14\0\15\10"+
    "\5\0\1\10\1\u01cb\24\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\4\10\1\u01cc\10\10\5\0\26\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\10"+
    "\14\0\7\10\1\u01cd\5\10\5\0\26\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\2\10\1\u01ce\12\10\5\0\26\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\10\14\0\2\10\1\u01cf\12\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\11\10\1\u01d0\3\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\7\10\1\u01d1\5\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\4\10\1\u01d2"+
    "\10\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\u01d3\14\0\15\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\4\10\1\u01d4"+
    "\10\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\u01d5\14\0\15\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\u01d6\14\0\15\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\4\10\1\u01d7\10\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\2\10\1\u01d8"+
    "\12\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\10\14\0\12\10"+
    "\1\u01d9\2\10\5\0\26\10\6\0\1\7\5\115\1\7"+
    "\2\13\1\115\1\0\1\107\3\115\7\0\1\115\14\0"+
    "\14\115\1\u01da\5\0\26\115\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\1\10\1\u01db\13\10\5\0\26\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\10"+
    "\14\0\15\10\5\0\1\10\1\u01dc\24\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\3\10\1\u01dd\11\10\5\0\26\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\10\14\0\1\10\1\u01de\13\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\2\10\1\u01df\12\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\12\10\1\u01e0\2\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\13\10\1\u01e1"+
    "\1\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\10\14\0\2\10"+
    "\1\u01e2\12\10\5\0\26\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\2\10\1\u01e3\12\10\5\0\26\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\10"+
    "\14\0\2\10\1\u01e4\12\10\5\0\26\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\7\10\1\u01e5\5\10\5\0\26\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\10\14\0\7\10\1\u01e6\5\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\1\10\1\u01e7\13\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\12\10\1\u01e8\2\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\1\u01e9\14\10"+
    "\5\0\26\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\11\10\1\u01ea"+
    "\3\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\10\14\0\11\10"+
    "\1\u01eb\3\10\5\0\26\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\4\10\1\u01ec\10\10\5\0\26\10\6\0\1\110\5\10"+
    "\1\110\2\13\1\10\1\0\1\111\3\10\7\0\1\10"+
    "\14\0\12\10\1\u01ed\2\10\5\0\26\10\6\0\1\110"+
    "\5\10\1\110\2\13\1\10\1\0\1\111\3\10\7\0"+
    "\1\10\14\0\3\10\1\u01ee\11\10\5\0\26\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\10\14\0\2\10\1\u01ef\12\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\2\10\1\u01f0\12\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\u01f1\14\0\15\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\u01f2\14\0\15\10\5\0\26\10\6\0"+
    "\1\110\5\10\1\110\2\13\1\10\1\0\1\111\3\10"+
    "\7\0\1\10\14\0\2\10\1\u01f3\12\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\1\u01f4\14\10\5\0\26\10"+
    "\6\0\1\110\5\10\1\110\2\13\1\10\1\0\1\111"+
    "\3\10\7\0\1\10\14\0\7\10\1\u01f5\5\10\5\0"+
    "\26\10\6\0\1\110\5\10\1\110\2\13\1\10\1\0"+
    "\1\111\3\10\7\0\1\10\14\0\15\10\5\0\4\10"+
    "\1\u01f6\21\10\6\0\1\110\5\10\1\110\2\13\1\10"+
    "\1\0\1\111\3\10\7\0\1\10\14\0\11\10\1\u01f7"+
    "\3\10\5\0\26\10\6\0\1\110\5\10\1\110\2\13"+
    "\1\10\1\0\1\111\3\10\7\0\1\10\14\0\2\10"+
    "\1\u01f8\12\10\5\0\26\10\6\0\1\110\5\10\1\110"+
    "\2\13\1\10\1\0\1\111\3\10\7\0\1\10\14\0"+
    "\4\10\1\u01f9\10\10\5\0\26\10";

  private static int [] zzUnpackTrans() {
    int [] result = new int[32400];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String[] ZZ_ERROR_MSG = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\1\1\1\11\5\1\1\11\5\1\2\11"+
    "\1\1\1\11\1\1\2\11\1\1\7\11\1\1\4\11"+
    "\7\1\5\11\25\1\1\0\1\1\5\0\1\11\11\1"+
    "\1\0\1\11\4\1\1\11\65\1\2\0\1\11\67\1"+
    "\1\11\1\0\7\1\1\11\1\0\73\1\1\11\347\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[505];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private CharSequence zzBuffer = "";

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /**
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
  public _ResLexer() {
    this((java.io.Reader)null);
  }


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  _ResLexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    int size = 0;
    for (int i = 0, length = packed.length(); i < length; i += 2) {
      size += packed.charAt(i);
    }
    char[] map = new char[size];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < packed.length()) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }

  public final int getTokenStart() {
    return zzStartRead;
  }

  public final int getTokenEnd() {
    return getTokenStart() + yylength();
  }

  public void reset(CharSequence buffer, int start, int end, int initialState) {
    zzBuffer = buffer;
    zzCurrentPos = zzMarkedPos = zzStartRead = start;
    zzAtEOF  = false;
    zzAtBOL = true;
    zzEndRead = end;
    yybegin(initialState);
  }

  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   *
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {
    return true;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final CharSequence yytext() {
    return zzBuffer.subSequence(zzStartRead, zzMarkedPos);
  }


  /**
   * Returns the character at position <tt>pos</tt> from the
   * matched text.
   *
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch.
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer.charAt(zzStartRead+pos);
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of
   * yypushback(int) and a match-all fallback rule) this method
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() {
    if (!zzEOFDone) {
      zzEOFDone = true;
      return;

    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + ZZ_CMAP(zzInput) ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        zzDoEOF();
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { return BAD_CHARACTER;
            } 
            // fall through
          case 109: break;
          case 2: 
            { return NLS;
            } 
            // fall through
          case 110: break;
          case 3: 
            { return WS;
            } 
            // fall through
          case 111: break;
          case 4: 
            { return MATHIDENTIFIER;
            } 
            // fall through
          case 112: break;
          case 5: 
            { return IDENTIFIER;
            } 
            // fall through
          case 113: break;
          case 6: 
            { return INT;
            } 
            // fall through
          case 114: break;
          case 7: 
            { return STRING;
            } 
            // fall through
          case 115: break;
          case 8: 
            { return POUND;
            } 
            // fall through
          case 116: break;
          case 9: 
            { return DOT;
            } 
            // fall through
          case 117: break;
          case 10: 
            { return LPAREN;
            } 
            // fall through
          case 118: break;
          case 11: 
            { return RPAREN;
            } 
            // fall through
          case 119: break;
          case 12: 
            { return COLON;
            } 
            // fall through
          case 120: break;
          case 13: 
            { return SEMICOLON;
            } 
            // fall through
          case 121: break;
          case 14: 
            { return COMMA;
            } 
            // fall through
          case 122: break;
          case 15: 
            { return DBL_BAR;
            } 
            // fall through
          case 123: break;
          case 16: 
            { return LANGLE;
            } 
            // fall through
          case 124: break;
          case 17: 
            { return RANGLE;
            } 
            // fall through
          case 125: break;
          case 18: 
            { return LCEIL;
            } 
            // fall through
          case 126: break;
          case 19: 
            { return RCEIL;
            } 
            // fall through
          case 127: break;
          case 20: 
            { return LBRACK;
            } 
            // fall through
          case 128: break;
          case 21: 
            { return RBRACK;
            } 
            // fall through
          case 129: break;
          case 22: 
            { return BAR;
            } 
            // fall through
          case 130: break;
          case 23: 
            { return LBRACE;
            } 
            // fall through
          case 131: break;
          case 24: 
            { return RBRACE;
            } 
            // fall through
          case 132: break;
          case 25: 
            { return EXISTS;
            } 
            // fall through
          case 133: break;
          case 26: 
            { return FORALL;
            } 
            // fall through
          case 134: break;
          case 27: 
            { return TRIANGLEQ;
            } 
            // fall through
          case 135: break;
          case 28: 
            { return EQUALS;
            } 
            // fall through
          case 136: break;
          case 29: 
            { return NEQUALS;
            } 
            // fall through
          case 137: break;
          case 30: 
            { return AND;
            } 
            // fall through
          case 138: break;
          case 31: 
            { return OR;
            } 
            // fall through
          case 139: break;
          case 32: 
            { return LINE_COMMENT;
            } 
            // fall through
          case 140: break;
          case 33: 
            { return MULTILINE_COMMENT;
            } 
            // fall through
          case 141: break;
          case 34: 
            { return COLON_COLON;
            } 
            // fall through
          case 142: break;
          case 35: 
            { return COLON_EQUALS;
            } 
            // fall through
          case 143: break;
          case 36: 
            { return IF;
            } 
            // fall through
          case 144: break;
          case 37: 
            { return IS;
            } 
            // fall through
          case 145: break;
          case 38: 
            { return PIECEWISE;
            } 
            // fall through
          case 146: break;
          case 39: 
            { return OF;
            } 
            // fall through
          case 147: break;
          case 40: 
            { return DO;
            } 
            // fall through
          case 148: break;
          case 41: 
            { return BY;
            } 
            // fall through
          case 149: break;
          case 42: 
            { return IF_PROG;
            } 
            // fall through
          case 150: break;
          case 43: 
            { return COLON_EQUALS_COLON;
            } 
            // fall through
          case 151: break;
          case 44: 
            { return END;
            } 
            // fall through
          case 152: break;
          case 45: 
            { return FOR;
            } 
            // fall through
          case 153: break;
          case 46: 
            { return DEFINITION;
            } 
            // fall through
          case 154: break;
          case 47: 
            { return VAR;
            } 
            // fall through
          case 155: break;
          case 48: 
            { return IND_BASE;
            } 
            // fall through
          case 156: break;
          case 49: 
            { return ELSE;
            } 
            // fall through
          case 157: break;
          case 50: 
            { return FROM;
            } 
            // fall through
          case 158: break;
          case 51: 
            { return TRUE;
            } 
            // fall through
          case 159: break;
          case 52: 
            { return TYPE_PARAM;
            } 
            // fall through
          case 160: break;
          case 53: 
            { return THEN;
            } 
            // fall through
          case 161: break;
          case 54: 
            { return USES;
            } 
            // fall through
          case 162: break;
          case 55: 
            { return WITH;
            } 
            // fall through
          case 163: break;
          case 56: 
            { return TYPE_FAMILY;
            } 
            // fall through
          case 164: break;
          case 57: 
            { return IND_HYPO;
            } 
            // fall through
          case 165: break;
          case 58: 
            { return FALSE;
            } 
            // fall through
          case 166: break;
          case 59: 
            { return WHILE;
            } 
            // fall through
          case 167: break;
          case 60: 
            { return ALTERS;
            } 
            // fall through
          case 168: break;
          case 61: 
            { return FAMILY;
            } 
            // fall through
          case 169: break;
          case 62: 
            { return PRECIS;
            } 
            // fall through
          case 170: break;
          case 63: 
            { return CLEARS;
            } 
            // fall through
          case 171: break;
          case 64: 
            { return RECORD;
            } 
            // fall through
          case 172: break;
          case 65: 
            { return VALUED;
            } 
            // fall through
          case 173: break;
          case 66: 
            { return ELANGLE;
            } 
            // fall through
          case 174: break;
          case 67: 
            { return EEXISTS;
            } 
            // fall through
          case 175: break;
          case 68: 
            { return ERANGLE;
            } 
            // fall through
          case 176: break;
          case 69: 
            { return EFORALL;
            } 
            // fall through
          case 177: break;
          case 70: 
            { return ENSURES;
            } 
            // fall through
          case 178: break;
          case 71: 
            { return EXTENDS;
            } 
            // fall through
          case 179: break;
          case 72: 
            { return CONCEPT;
            } 
            // fall through
          case 180: break;
          case 73: 
            { return COERCER;
            } 
            // fall through
          case 181: break;
          case 74: 
            { return MODELED;
            } 
            // fall through
          case 182: break;
          case 75: 
            { return UPDATES;
            } 
            // fall through
          case 183: break;
          case 76: 
            { return GENERIC;
            } 
            // fall through
          case 184: break;
          case 77: 
            { return LITERAL;
            } 
            // fall through
          case 185: break;
          case 78: 
            { return THEOREM;
            } 
            // fall through
          case 186: break;
          case 79: 
            { return ENHANCED;
            } 
            // fall through
          case 187: break;
          case 80: 
            { return EXEMPLAR;
            } 
            // fall through
          case 188: break;
          case 81: 
            { return REALIZED;
            } 
            // fall through
          case 189: break;
          case 82: 
            { return RESTORES;
            } 
            // fall through
          case 190: break;
          case 83: 
            { return REQUIRES;
            } 
            // fall through
          case 191: break;
          case 84: 
            { return REPLACES;
            } 
            // fall through
          case 192: break;
          case 85: 
            { return CHANGING;
            } 
            // fall through
          case 193: break;
          case 86: 
            { return FACILITY;
            } 
            // fall through
          case 194: break;
          case 87: 
            { return IMPLICIT;
            } 
            // fall through
          case 195: break;
          case 88: 
            { return EVALUATES;
            } 
            // fall through
          case 196: break;
          case 89: 
            { return OTHERWISE;
            } 
            // fall through
          case 197: break;
          case 90: 
            { return CART_PROD;
            } 
            // fall through
          case 198: break;
          case 91: 
            { return COROLLARY;
            } 
            // fall through
          case 199: break;
          case 92: 
            { return PROCEDURE;
            } 
            // fall through
          case 200: break;
          case 93: 
            { return PRESERVES;
            } 
            // fall through
          case 201: break;
          case 94: 
            { return INDUCTIVE;
            } 
            // fall through
          case 202: break;
          case 95: 
            { return RECURSIVE;
            } 
            // fall through
          case 203: break;
          case 96: 
            { return OPERATION;
            } 
            // fall through
          case 204: break;
          case 97: 
            { return EXTERNALLY;
            } 
            // fall through
          case 205: break;
          case 98: 
            { return DECREASING;
            } 
            // fall through
          case 206: break;
          case 99: 
            { return CATEGORICAL;
            } 
            // fall through
          case 207: break;
          case 100: 
            { return CONVENTIONS;
            } 
            // fall through
          case 208: break;
          case 101: 
            { return CONSTRAINTS;
            } 
            // fall through
          case 209: break;
          case 102: 
            { return ENHANCEMENT;
            } 
            // fall through
          case 210: break;
          case 103: 
            { return MAINTAINING;
            } 
            // fall through
          case 211: break;
          case 104: 
            { return REALIZATION;
            } 
            // fall through
          case 212: break;
          case 105: 
            { return RECOGNITION;
            } 
            // fall through
          case 213: break;
          case 106: 
            { return WHICH_ENTAILS;
            } 
            // fall through
          case 214: break;
          case 107: 
            { return INITIALIZATION;
            } 
            // fall through
          case 215: break;
          case 108: 
            { return CORRESPONDENCE;
            } 
            // fall through
          case 216: break;
          default:
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
